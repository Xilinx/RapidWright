apply plugin: 'application'
apply plugin: 'java-library'

sourceCompatibility = 8
targetCompatibility = 8

repositories {
    mavenCentral()
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'
}

import java.util.stream.Collectors

//Kryo needs to access sun.nio.ch.DirectBuffer. This is forbidden by default in Java 16 and up. Check if we need to add a jvm arg.
if (org.gradle.api.JavaVersion.current().isJava10Compatible()) {
	applicationDefaultJvmArgs = ["--add-exports=java.base/sun.nio.ch=ALL-UNNAMED"]
}

configurations.implementation.canBeResolved = true
configurations.testImplementation.canBeResolved = true
configurations.api.canBeResolved = true

tasks.withType(Test) {
  maxHeapSize = "5G"
  //Propagate JVM settings to test JVM
  jvmArgs applicationDefaultJvmArgs
}

task testJava(type:Test) {
  group = "verification"
  description = "Runs the Java unit tests."

  useJUnitPlatform()
}

test {
  dependsOn testJava
}

gradle.taskGraph.whenReady {
  if (!project.test.filter.commandLineIncludePatterns.isEmpty()) {
    throw new InvalidUserDataException("'test' task does not support filters (i.e. '--tests' option); please apply filters directly to 'testJava'/'testPython' tasks instead.")
  }
}

task updateSubmodules(type:Exec) {
  group = "build setup"
  description = "Update Git submodules"
  executable = 'git'
  args = ['submodule', 'update', '--init', '--recursive']
}

task initSubmodules {
  group = "build setup"
  description = "Init Git submodules (first time only)"
  if (!file("test/RapidWrightDCP/.git").exists()) {
    dependsOn updateSubmodules
  }
}

task remindSubmodules {
  onlyIf {
    testJava.state.failure != null || (project.tasks.findByName('testPython') && testPython.state.failure != null)
  }
  doLast {
    logger.warn('Failed tests detected. Some tests depend on DCPs from the git submodule at test/RapidWrightDCP, consider checking its status and updating with \'gradlew updateSubmodules\'')
  }
}

tasks.withType(Test) {
  dependsOn initSubmodules
  finalizedBy remindSubmodules
}

