/* 
 * Copyright (c) 2022 Xilinx, Inc. 
 * All rights reserved.
 *
 * Author: Chris Lavin, Xilinx Research Labs.
 *  
 * This file is part of RapidWright. 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */
 
// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: PhysicalNetlist.capnp

package com.xilinx.rapidwright.interchange;

public final class PhysicalNetlist {
  public static class StringRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return StringRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)1);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_898b9b1cd371bc2c.buffer, 48, 7);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_898b9b1cd371bc2c.buffer, 48, 7);
      }

    }

  }


  public static class HashSet {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return HashSet.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ImplementationType value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }
      public final void setHide(boolean value) {
        _setBooleanField(16, value, (boolean)true);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }

    }

  }


  public static class PhysNetlist {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)8);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return PhysNetlist.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasPart() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getPart() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setPart(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setPart(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initPart(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasPlacements() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.Builder> getPlacements() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.listFactory, 1, null, 0);
      }
      public final void setPlacements(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.listFactory, 1, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.Builder> initPlacements(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.listFactory, 1, size);
      }
      public final boolean hasPhysNets() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Builder> getPhysNets() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.listFactory, 2, null, 0);
      }
      public final void setPhysNets(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.listFactory, 2, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Builder> initPhysNets(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.listFactory, 2, size);
      }
      public final boolean hasPhysCells() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.Builder> getPhysCells() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.listFactory, 3, null, 0);
      }
      public final void setPhysCells(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.listFactory, 3, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.Builder> initPhysCells(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.listFactory, 3, size);
      }
      public final boolean hasStrList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.TextList.Builder getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 4, null, 0);
      }
      public final void setStrList(org.capnproto.TextList.Reader value) {
        _setPointerField(org.capnproto.TextList.factory, 4, value);
      }
      public final org.capnproto.TextList.Builder initStrList(int size) {
        return _initPointerField(org.capnproto.TextList.factory, 4, size);
      }
      public final boolean hasSiteInsts() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.Builder> getSiteInsts() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.listFactory, 5, null, 0);
      }
      public final void setSiteInsts(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.listFactory, 5, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.Builder> initSiteInsts(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.listFactory, 5, size);
      }
      public final boolean hasProperties() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.Builder> getProperties() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.listFactory, 6, null, 0);
      }
      public final void setProperties(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.listFactory, 6, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.Builder> initProperties(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.listFactory, 6, size);
      }
      public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Builder getNullNet() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.factory, 7, null, 0);
      }
      public final void setNullNet(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.factory,7, value);
      }
      public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Builder initNullNet() {
        return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.factory,7, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasPart() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getPart() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean hasPlacements() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.Reader> getPlacements() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.CellPlacement.listFactory, 1, null, 0);
      }

      public final boolean hasPhysNets() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Reader> getPhysNets() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.listFactory, 2, null, 0);
      }

      public final boolean hasPhysCells() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.Reader> getPhysCells() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCell.listFactory, 3, null, 0);
      }

      public final boolean hasStrList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.TextList.Reader getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 4, null, 0);
      }

      public final boolean hasSiteInsts() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.Reader> getSiteInsts() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.SiteInstance.listFactory, 5, null, 0);
      }

      public final boolean hasProperties() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.Reader> getProperties() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.Property.listFactory, 6, null, 0);
      }

      public boolean hasNullNet() {
        return !_pointerFieldIsNull(7);
      }
      public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.Reader getNullNet() {
        return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysNet.factory,7,null, 0);
      }

    }

    public static class PinMapping {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PinMapping.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.MULTI;
            case 1 : return Which.OTHER_CELL;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCellPin() {
          return _getIntField(0);
        }
        public final void setCellPin(int value) {
          _setIntField(0, value);
        }

        public final int getBel() {
          return _getIntField(1);
        }
        public final void setBel(int value) {
          _setIntField(1, value);
        }

        public final int getBelPin() {
          return _getIntField(2);
        }
        public final void setBelPin(int value) {
          _setIntField(2, value);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(96);
        }
        public final void setIsFixed(boolean value) {
          _setBooleanField(96, value);
        }

        public final boolean isMulti() {
          return which() == PhysNetlist.PinMapping.Which.MULTI;
        }
        public final org.capnproto.Void getMulti() {
          assert which() == PhysNetlist.PinMapping.Which.MULTI:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setMulti(org.capnproto.Void value) {
          _setShortField(7, (short)PhysNetlist.PinMapping.Which.MULTI.ordinal());
        }

        public final boolean isOtherCell() {
          return which() == PhysNetlist.PinMapping.Which.OTHER_CELL;
        }
        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.Builder getOtherCell() {
          assert which() == PhysNetlist.PinMapping.Which.OTHER_CELL:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.factory, 0, null, 0);
        }
        public final void setOtherCell(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.Reader value) {
          _setShortField(7, (short)PhysNetlist.PinMapping.Which.OTHER_CELL.ordinal());
          _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.Builder initOtherCell() {
          _setShortField(7, (short)PhysNetlist.PinMapping.Which.OTHER_CELL.ordinal());
          return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.MULTI;
            case 1 : return Which.OTHER_CELL;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getCellPin() {
          return _getIntField(0);
        }

        public final int getBel() {
          return _getIntField(1);
        }

        public final int getBelPin() {
          return _getIntField(2);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(96);
        }

        public final boolean isMulti() {
          return which() == PhysNetlist.PinMapping.Which.MULTI;
        }
        public final org.capnproto.Void getMulti() {
          assert which() == PhysNetlist.PinMapping.Which.MULTI:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isOtherCell() {
          return which() == PhysNetlist.PinMapping.Which.OTHER_CELL;
        }
        public boolean hasOtherCell() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.Reader getOtherCell() {
          assert which() == PhysNetlist.PinMapping.Which.OTHER_CELL:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.MultiCellPinMapping.factory,0,null, 0);
        }

      }

      public enum Which {
        MULTI,
        OTHER_CELL,
        _NOT_IN_SCHEMA,
      }
    }


    public static class MultiCellPinMapping {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.MultiCellPinMapping.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getMultiCell() {
          return _getIntField(0);
        }
        public final void setMultiCell(int value) {
          _setIntField(0, value);
        }

        public final int getMultiType() {
          return _getIntField(1);
        }
        public final void setMultiType(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getMultiCell() {
          return _getIntField(0);
        }

        public final int getMultiType() {
          return _getIntField(1);
        }

      }

    }


    public static class CellPlacement {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.CellPlacement.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCellName() {
          return _getIntField(0);
        }
        public final void setCellName(int value) {
          _setIntField(0, value);
        }

        public final int getType() {
          return _getIntField(1);
        }
        public final void setType(int value) {
          _setIntField(1, value);
        }

        public final int getSite() {
          return _getIntField(2);
        }
        public final void setSite(int value) {
          _setIntField(2, value);
        }

        public final int getBel() {
          return _getIntField(3);
        }
        public final void setBel(int value) {
          _setIntField(3, value);
        }

        public final boolean hasPinMap() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.Builder> getPinMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.listFactory, 0, null, 0);
        }
        public final void setPinMap(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.Builder> initPinMap(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.listFactory, 0, size);
        }
        public final boolean hasOtherBels() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getOtherBels() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }
        public final void setOtherBels(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 1, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initOtherBels(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 1, size);
        }
        public final boolean getIsBelFixed() {
          return _getBooleanField(128);
        }
        public final void setIsBelFixed(boolean value) {
          _setBooleanField(128, value);
        }

        public final boolean getIsSiteFixed() {
          return _getBooleanField(129);
        }
        public final void setIsSiteFixed(boolean value) {
          _setBooleanField(129, value);
        }

        public final int getAltSiteType() {
          return _getIntField(5);
        }
        public final void setAltSiteType(int value) {
          _setIntField(5, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCellName() {
          return _getIntField(0);
        }

        public final int getType() {
          return _getIntField(1);
        }

        public final int getSite() {
          return _getIntField(2);
        }

        public final int getBel() {
          return _getIntField(3);
        }

        public final boolean hasPinMap() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.Reader> getPinMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PinMapping.listFactory, 0, null, 0);
        }

        public final boolean hasOtherBels() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getOtherBels() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }

        public final boolean getIsBelFixed() {
          return _getBooleanField(128);
        }

        public final boolean getIsSiteFixed() {
          return _getBooleanField(129);
        }

        public final int getAltSiteType() {
          return _getIntField(5);
        }

      }

    }


    public static class PhysCell {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysCell.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCellName() {
          return _getIntField(0);
        }
        public final void setCellName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType getPhysType() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.LOCKED;
            case 1 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.PORT;
            case 2 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.GND;
            case 3 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.VCC;
            default: return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType._NOT_IN_SCHEMA;
          }
        }
        public final void setPhysType(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType value) {
          _setShortField(2, (short)value.ordinal());
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCellName() {
          return _getIntField(0);
        }

        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType getPhysType() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.LOCKED;
            case 1 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.PORT;
            case 2 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.GND;
            case 3 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType.VCC;
            default: return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysCellType._NOT_IN_SCHEMA;
          }
        }

      }

    }


    public enum PhysCellType {
      LOCKED,
      PORT,
      GND,
      VCC,
      _NOT_IN_SCHEMA,
    }

    public static class PhysNet {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysNet.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final boolean hasSources() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> getSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 0, null, 0);
        }
        public final void setSources(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> initSources(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 0, size);
        }
        public final boolean hasStubs() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> getStubs() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, null, 0);
        }
        public final void setStubs(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> initStubs(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, size);
        }
        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType getType() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.SIGNAL;
            case 1 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.VCC;
            default: return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType._NOT_IN_SCHEMA;
          }
        }
        public final void setType(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType value) {
          _setShortField(2, (short)value.ordinal());
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final boolean hasSources() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> getSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 0, null, 0);
        }

        public final boolean hasStubs() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> getStubs() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, null, 0);
        }

        public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType getType() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.SIGNAL;
            case 1 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType.VCC;
            default: return com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.NetType._NOT_IN_SCHEMA;
          }
        }

      }

    }


    public enum NetType {
      SIGNAL,
      GND,
      VCC,
      _NOT_IN_SCHEMA,
    }

    public static class RouteBranch {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.RouteBranch.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final RouteSegment.Builder getRouteSegment() {
          return new PhysNetlist.RouteBranch.RouteSegment.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final RouteSegment.Builder initRouteSegment() {
          _setShortField(0,(short)0);
          _clearPointerField(0);
  return new PhysNetlist.RouteBranch.RouteSegment.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean hasBranches() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> getBranches() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, null, 0);
        }
        public final void setBranches(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Builder> initBranches(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public RouteSegment.Reader getRouteSegment() {
          return new PhysNetlist.RouteBranch.RouteSegment.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasBranches() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.Reader> getBranches() {
          return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.RouteBranch.listFactory, 1, null, 0);
        }

      }

      public static class RouteSegment {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return PhysNetlist.RouteBranch.RouteSegment.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.BEL_PIN;
              case 1 : return Which.SITE_PIN;
              case 2 : return Which.PIP;
              case 3 : return Which.SITE_P_I_P;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isBelPin() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN;
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.Builder getBelPin() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.factory, 0, null, 0);
          }
          public final void setBelPin(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.Reader value) {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.Builder initBelPin() {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.factory,0, 0);
          }
          public final boolean isSitePin() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN;
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.Builder getSitePin() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.factory, 0, null, 0);
          }
          public final void setSitePin(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.Reader value) {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.Builder initSitePin() {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.factory,0, 0);
          }
          public final boolean isPip() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.PIP;
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.Builder getPip() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.PIP:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.factory, 0, null, 0);
          }
          public final void setPip(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.Reader value) {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.PIP.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.Builder initPip() {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.PIP.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.factory,0, 0);
          }
          public final boolean isSitePIP() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P;
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.Builder getSitePIP() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.factory, 0, null, 0);
          }
          public final void setSitePIP(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.Reader value) {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.Builder initSitePIP() {
            _setShortField(0, (short)PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.factory,0, 0);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.BEL_PIN;
              case 1 : return Which.SITE_PIN;
              case 2 : return Which.PIP;
              case 3 : return Which.SITE_P_I_P;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isBelPin() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN;
          }
          public boolean hasBelPin() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.Reader getBelPin() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.BEL_PIN:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysBelPin.factory,0,null, 0);
          }

          public final boolean isSitePin() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN;
          }
          public boolean hasSitePin() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.Reader getSitePin() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_PIN:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePin.factory,0,null, 0);
          }

          public final boolean isPip() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.PIP;
          }
          public boolean hasPip() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.Reader getPip() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.PIP:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysPIP.factory,0,null, 0);
          }

          public final boolean isSitePIP() {
            return which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P;
          }
          public boolean hasSitePIP() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.Reader getSitePIP() {
            assert which() == PhysNetlist.RouteBranch.RouteSegment.Which.SITE_P_I_P:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.PhysicalNetlist.PhysNetlist.PhysSitePIP.factory,0,null, 0);
          }

        }

        public enum Which {
          BEL_PIN,
          SITE_PIN,
          PIP,
          SITE_P_I_P,
          _NOT_IN_SCHEMA,
        }
      }


    }


    public static class PhysBel {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysBel.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSite() {
          return _getIntField(0);
        }
        public final void setSite(int value) {
          _setIntField(0, value);
        }

        public final int getBel() {
          return _getIntField(1);
        }
        public final void setBel(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getSite() {
          return _getIntField(0);
        }

        public final int getBel() {
          return _getIntField(1);
        }

      }

    }


    public static class PhysBelPin {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysBelPin.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSite() {
          return _getIntField(0);
        }
        public final void setSite(int value) {
          _setIntField(0, value);
        }

        public final int getBel() {
          return _getIntField(1);
        }
        public final void setBel(int value) {
          _setIntField(1, value);
        }

        public final int getPin() {
          return _getIntField(2);
        }
        public final void setPin(int value) {
          _setIntField(2, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getSite() {
          return _getIntField(0);
        }

        public final int getBel() {
          return _getIntField(1);
        }

        public final int getPin() {
          return _getIntField(2);
        }

      }

    }


    public static class PhysSitePin {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysSitePin.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSite() {
          return _getIntField(0);
        }
        public final void setSite(int value) {
          _setIntField(0, value);
        }

        public final int getPin() {
          return _getIntField(1);
        }
        public final void setPin(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getSite() {
          return _getIntField(0);
        }

        public final int getPin() {
          return _getIntField(1);
        }

      }

    }


    public static class PhysPIP {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)3,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysPIP.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.NO_SITE;
            case 1 : return Which.SITE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getTile() {
          return _getIntField(0);
        }
        public final void setTile(int value) {
          _setIntField(0, value);
        }

        public final int getWire0() {
          return _getIntField(1);
        }
        public final void setWire0(int value) {
          _setIntField(1, value);
        }

        public final int getWire1() {
          return _getIntField(2);
        }
        public final void setWire1(int value) {
          _setIntField(2, value);
        }

        public final boolean getForward() {
          return _getBooleanField(96);
        }
        public final void setForward(boolean value) {
          _setBooleanField(96, value);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(97);
        }
        public final void setIsFixed(boolean value) {
          _setBooleanField(97, value);
        }

        public final boolean isNoSite() {
          return which() == PhysNetlist.PhysPIP.Which.NO_SITE;
        }
        public final org.capnproto.Void getNoSite() {
          assert which() == PhysNetlist.PhysPIP.Which.NO_SITE:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setNoSite(org.capnproto.Void value) {
          _setShortField(7, (short)PhysNetlist.PhysPIP.Which.NO_SITE.ordinal());
        }

        public final boolean isSite() {
          return which() == PhysNetlist.PhysPIP.Which.SITE;
        }
        public final int getSite() {
          assert which() == PhysNetlist.PhysPIP.Which.SITE:
                      "Must check which() before get()ing a union member.";
          return _getIntField(4);
        }
        public final void setSite(int value) {
          _setShortField(7, (short)PhysNetlist.PhysPIP.Which.SITE.ordinal());
          _setIntField(4, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.NO_SITE;
            case 1 : return Which.SITE;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getTile() {
          return _getIntField(0);
        }

        public final int getWire0() {
          return _getIntField(1);
        }

        public final int getWire1() {
          return _getIntField(2);
        }

        public final boolean getForward() {
          return _getBooleanField(96);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(97);
        }

        public final boolean isNoSite() {
          return which() == PhysNetlist.PhysPIP.Which.NO_SITE;
        }
        public final org.capnproto.Void getNoSite() {
          assert which() == PhysNetlist.PhysPIP.Which.NO_SITE:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isSite() {
          return which() == PhysNetlist.PhysPIP.Which.SITE;
        }
        public final int getSite() {
          assert which() == PhysNetlist.PhysPIP.Which.SITE:
                      "Must check which() before get()ing a union member.";
          return _getIntField(4);
        }

      }

      public enum Which {
        NO_SITE,
        SITE,
        _NOT_IN_SCHEMA,
      }
    }


    public static class PhysSitePIP {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.PhysSitePIP.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.IS_INVERTING;
            case 1 : return Which.INVERTS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSite() {
          return _getIntField(0);
        }
        public final void setSite(int value) {
          _setIntField(0, value);
        }

        public final int getBel() {
          return _getIntField(1);
        }
        public final void setBel(int value) {
          _setIntField(1, value);
        }

        public final int getPin() {
          return _getIntField(2);
        }
        public final void setPin(int value) {
          _setIntField(2, value);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(96);
        }
        public final void setIsFixed(boolean value) {
          _setBooleanField(96, value);
        }

        public final boolean isIsInverting() {
          return which() == PhysNetlist.PhysSitePIP.Which.IS_INVERTING;
        }
        public final boolean getIsInverting() {
          assert which() == PhysNetlist.PhysSitePIP.Which.IS_INVERTING:
                      "Must check which() before get()ing a union member.";
          return _getBooleanField(97);
        }
        public final void setIsInverting(boolean value) {
          _setShortField(7, (short)PhysNetlist.PhysSitePIP.Which.IS_INVERTING.ordinal());
          _setBooleanField(97, value);
        }

        public final boolean isInverts() {
          return which() == PhysNetlist.PhysSitePIP.Which.INVERTS;
        }
        public final org.capnproto.Void getInverts() {
          assert which() == PhysNetlist.PhysSitePIP.Which.INVERTS:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setInverts(org.capnproto.Void value) {
          _setShortField(7, (short)PhysNetlist.PhysSitePIP.Which.INVERTS.ordinal());
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(7)) {
            case 0 : return Which.IS_INVERTING;
            case 1 : return Which.INVERTS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getSite() {
          return _getIntField(0);
        }

        public final int getBel() {
          return _getIntField(1);
        }

        public final int getPin() {
          return _getIntField(2);
        }

        public final boolean getIsFixed() {
          return _getBooleanField(96);
        }

        public final boolean isIsInverting() {
          return which() == PhysNetlist.PhysSitePIP.Which.IS_INVERTING;
        }
        public final boolean getIsInverting() {
          assert which() == PhysNetlist.PhysSitePIP.Which.IS_INVERTING:
                      "Must check which() before get()ing a union member.";
          return _getBooleanField(97);
        }

        public final boolean isInverts() {
          return which() == PhysNetlist.PhysSitePIP.Which.INVERTS;
        }
        public final org.capnproto.Void getInverts() {
          assert which() == PhysNetlist.PhysSitePIP.Which.INVERTS:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

      }

      public enum Which {
        IS_INVERTING,
        INVERTS,
        _NOT_IN_SCHEMA,
      }
    }


    public static class SiteInstance {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.SiteInstance.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSite() {
          return _getIntField(0);
        }
        public final void setSite(int value) {
          _setIntField(0, value);
        }

        public final int getType() {
          return _getIntField(1);
        }
        public final void setType(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getSite() {
          return _getIntField(0);
        }

        public final int getType() {
          return _getIntField(1);
        }

      }

    }


    public static class Property {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return PhysNetlist.Property.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getKey() {
          return _getIntField(0);
        }
        public final void setKey(int value) {
          _setIntField(0, value);
        }

        public final int getValue() {
          return _getIntField(1);
        }
        public final void setValue(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getKey() {
          return _getIntField(0);
        }

        public final int getValue() {
          return _getIntField(1);
        }

      }

    }


  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_898b9b1cd371bc2c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u002c\u00bc\u0071\u00d3\u001c\u009b\u008b\u0089" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0068\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0053\u0074" +
   "\u0072\u0069\u006e\u0067\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" + "");
public static final org.capnproto.SegmentReader b_e9ed764e2445caf6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0068\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0073\u0074" +
   "\u0072\u0069\u006e\u0067\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u00bc\u0071\u00d3\u001c\u009b\u008b\u0089" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c4e918712809f3d6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d6\u00f3\u0009\u0028\u0071\u0018\u00e9\u00c4" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0068\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0048\u0061" +
   "\u0073\u0068\u0053\u0065\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u00bd\u00a6\u0096\u00c5\u00ca\u0085\u0092" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0069\u0064\u0065\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f802e332e61c3669 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0069\u0036\u001c\u00e6\u0032\u00e3\u0002\u00f8" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0068\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0068\u0061" +
   "\u0073\u0068\u0053\u0065\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d6\u00f3\u0009\u0028\u0071\u0018\u00e9\u00c4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8ff6d7ce6725fc21 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0068\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0008\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00f7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b3\u0004\u006d\u0000\u0043\u00d2\u0048\u00d4" +
   "\u0071\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0079\u0021\u0063\u0015\u0004\u00d9\u00e0\u00ca" +
   "\u0071\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u00c9\u004a\u0093\u00ca\u0090\u00af\u00ed\u00bb" +
   "\u0075\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0009\u00cc\u00ca\u006a\u00f0\u009f\u00ac\u00a0" +
   "\u0075\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\r\u00a6\u00dc\u0070\u00a5\u0089\u001b\u008b" +
   "\u0075\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u001d\u002f\u0036\u0009\u0074\u00de\u00d2" +
   "\u0075\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u00a8\u00cf\u00b5\u00eb\u00e6\u00ca\u0091\u00ab" +
   "\u0071\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\u006d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u008a\u0012\u00cf\u00f7\u0074\u0079\u00c2\u00ea" +
   "\u006d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0093\u00a8\u0070\u00ae\u00d2\u00aa\u00d6\u008c" +
   "\u0069\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u009e\u0021\u0082\u0019\u00cd\u0091\u004c\u00de" +
   "\u0069\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u006e\u0000\u0044\u00b5\u001d\u009a\u003c\u00f9" +
   "\u0069\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u00ef\u0066\u004c\u00b8\u00a5\u007a\u00b1\u0090" +
   "\u0065\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0005\u00f7\u00f0\u00a8\u0001\u00c5\u0081\u00db" +
   "\u0065\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u00a3\u006b\u0032\u001a\u00d4\u001e\u00a0\u00d7" +
   "\u0065\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0050\u0069\u006e\u004d\u0061\u0070\u0070\u0069" +
   "\u006e\u0067\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0075\u006c\u0074\u0069\u0043\u0065\u006c" +
   "\u006c\u0050\u0069\u006e\u004d\u0061\u0070\u0070" +
   "\u0069\u006e\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0050\u006c\u0061\u0063" +
   "\u0065\u006d\u0065\u006e\u0074\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0043\u0065\u006c\u006c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0043\u0065\u006c\u006c" +
   "\u0054\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u004e\u0065\u0074\u0000" +
   "\u004e\u0065\u0074\u0054\u0079\u0070\u0065\u0000" +
   "\u0052\u006f\u0075\u0074\u0065\u0042\u0072\u0061" +
   "\u006e\u0063\u0068\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0042\u0065\u006c\u0000" +
   "\u0050\u0068\u0079\u0073\u0042\u0065\u006c\u0050" +
   "\u0069\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0053\u0069\u0074\u0065" +
   "\u0050\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0050\u0049\u0050\u0000" +
   "\u0050\u0068\u0079\u0073\u0053\u0069\u0074\u0065" +
   "\u0050\u0049\u0050\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0049\u006e\u0073\u0074" +
   "\u0061\u006e\u0063\u0065\u0000\u0000\u0000\u0000" +
   "\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ec\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0088\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0085\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0061\u0072\u0074\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006c\u0061\u0063\u0065\u006d\u0065\u006e" +
   "\u0074\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c9\u004a\u0093\u00ca\u0090\u00af\u00ed\u00bb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0068\u0079\u0073\u004e\u0065\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u001d\u002f\u0036\u0009\u0074\u00de\u00d2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0068\u0079\u0073\u0043\u0065\u006c\u006c" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u00cc\u00ca\u006a\u00f0\u009f\u00ac\u00a0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0069\u0036\u001c\u00e6\u0032\u00e3\u0002\u00f8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0049\u006e\u0073\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u00f7\u00f0\u00a8\u0001\u00c5\u0081\u00db" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u0065\u0072\u0074\u0069" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a3\u006b\u0032\u001a\u00d4\u001e\u00a0\u00d7" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0075\u006c\u006c\u004e\u0065\u0074\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u001d\u002f\u0036\u0009\u0074\u00de\u00d2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d448d243006d04b3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b3\u0004\u006d\u0000\u0043\u00d2\u0048\u00d4" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0069\u006e\u004d\u0061\u0070" +
   "\u0070\u0069\u006e\u0067\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0060\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0050\u0069\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0046\u0069\u0078\u0065\u0064\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0075\u006c\u0074\u0069\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0074\u0068\u0065\u0072\u0043\u0065\u006c" +
   "\u006c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0021\u0063\u0015\u0004\u00d9\u00e0\u00ca" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cae0d90415632179 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0079\u0021\u0063\u0015\u0004\u00d9\u00e0\u00ca" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u004d\u0075\u006c\u0074\u0069\u0043" +
   "\u0065\u006c\u006c\u0050\u0069\u006e\u004d\u0061" +
   "\u0070\u0070\u0069\u006e\u0067\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006d\u0075\u006c\u0074\u0069\u0043\u0065\u006c" +
   "\u006c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0075\u006c\u0074\u0069\u0054\u0079\u0070" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bbedaf90ca934ac9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c9\u004a\u0093\u00ca\u0090\u00af\u00ed\u00bb" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0082\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00ff\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0043\u0065\u006c\u006c\u0050\u006c" +
   "\u0061\u0063\u0065\u006d\u0065\u006e\u0074\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0040\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0049\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u006c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0001\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0075\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u00b9\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00dc\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f8\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0080\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f5\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f4\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0081\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fd\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0009\u0002\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u002c\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u004e\u0061\u006d\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u004d\u0061\u0070\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b3\u0004\u006d\u0000\u0043\u00d2\u0048\u00d4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0074\u0068\u0065\u0072\u0042\u0065\u006c" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0042\u0065\u006c\u0046\u0069\u0078" +
   "\u0065\u0064\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0053\u0069\u0074\u0065\u0046\u0069" +
   "\u0078\u0065\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006c\u0074\u0053\u0069\u0074\u0065\u0054" +
   "\u0079\u0070\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a0ac9ff06acacc09 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0009\u00cc\u00ca\u006a\u00f0\u009f\u00ac\u00a0" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0043\u0065" +
   "\u006c\u006c\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u004e\u0061\u006d\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0068\u0079\u0073\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u00a6\u00dc\u0070\u00a5\u0089\u001b\u008b" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8b1b89a570dca60d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\r\u00a6\u00dc\u0070\u00a5\u0089\u001b\u008b" +
   "\"\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0067\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0043\u0065" +
   "\u006c\u006c\u0054\u0079\u0070\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0063\u006b\u0065\u0064\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u0000\u0000\u0000\u0000" +
   "\u0067\u006e\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0063\u0063\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d2de7409362f1d00 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0000\u001d\u002f\u0036\u0009\u0074\u00de\u00d2" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u004e\u0065" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0075\u0062\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u00cf\u00b5\u00eb\u00e6\u00ca\u0091\u00ab" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ab91cae6ebb5cfa8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a8\u00cf\u00b5\u00eb\u00e6\u00ca\u0091\u00ab" +
   "\"\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u004e\u0065\u0074\u0054\u0079\u0070" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0067\u006e\u0061\u006c\u0000\u0000" +
   "\u0067\u006e\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0063\u0063\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e8d985dbd8b6b94f =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0052\u006f\u0075\u0074\u0065\u0042" +
   "\u0072\u0061\u006e\u0063\u0068\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0090\u0051\u0083\u00c0\u0057\u002d\u00b2" +
   "\u0029\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0072\u006f\u0075\u0074\u0065\u0053\u0065\u0067" +
   "\u006d\u0065\u006e\u0074\u0000\u0000\u0000\u0000" +
   "\u0062\u0072\u0061\u006e\u0063\u0068\u0065\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b22d57c083519077 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0077\u0090\u0051\u0083\u00c0\u0057\u002d\u00b2" +
   "\u002e\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u004f\u00b9\u00b6\u00d8\u00db\u0085\u00d9\u00e8" +
   "\u0002\u0000\u0007\u0000\u0001\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00da\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0052\u006f\u0075\u0074\u0065\u0042" +
   "\u0072\u0061\u006e\u0063\u0068\u002e\u0072\u006f" +
   "\u0075\u0074\u0065\u0053\u0065\u0067\u006d\u0065" +
   "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0093\u00a8\u0070\u00ae\u00d2\u00aa\u00d6\u008c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0050\u0069\u006e\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009e\u0021\u0082\u0019\u00cd\u0091\u004c\u00de" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0000\u0044\u00b5\u001d\u009a\u003c\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0050\u0049\u0050\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ef\u0066\u004c\u00b8\u00a5\u007a\u00b1\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eac27974f7cf128a =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008a\u0012\u00cf\u00f7\u0074\u0079\u00c2\u00ea" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0042\u0065" +
   "\u006c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8cd6aad2ae70a893 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0093\u00a8\u0070\u00ae\u00d2\u00aa\u00d6\u008c" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0042\u0065" +
   "\u006c\u0050\u0069\u006e\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u009d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00c0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00cc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_de4c91cd1982219e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009e\u0021\u0082\u0019\u00cd\u0091\u004c\u00de" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0053\u0069" +
   "\u0074\u0065\u0050\u0069\u006e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f93c9a1db544006e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u006e\u0000\u0044\u00b5\u001d\u009a\u003c\u00f9" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0003\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0050\u0049" +
   "\u0050\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00d8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u00e1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0004\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\r\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0030\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u003c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0060\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0061\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0001\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00fe\u00ff\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0069\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0030\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0031\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u006f\u0072\u0077\u0061\u0072\u0064\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0046\u0069\u0078\u0065\u0064\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0053\u0069\u0074\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_90b17aa5b84c66ef =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ef\u0066\u004c\u00b8\u00a5\u007a\u00b1\u0090" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0068\u0079\u0073\u0053\u0069" +
   "\u0074\u0065\u0050\u0049\u0050\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0020\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0060\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0018\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00ff\u00ff\u0061\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0046\u0069\u0078\u0065\u0064\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0073\u0049\u006e\u0076\u0065\u0072\u0074" +
   "\u0069\u006e\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0076\u0065\u0072\u0074\u0073\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_db81c501a8f0f705 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0005\u00f7\u00f0\u00a8\u0001\u00c5\u0081\u00db" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0053\u0069\u0074\u0065\u0049\u006e" +
   "\u0073\u0074\u0061\u006e\u0063\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d7a01ed41a326ba3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a3\u006b\u0032\u001a\u00d4\u001e\u00a0\u00d7" +
   "\"\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0021\u00fc\u0025\u0067\u00ce\u00d7\u00f6\u008f" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0068\u0079\u0073\u0069\u0063\u0061\u006c" +
   "\u004e\u0065\u0074\u006c\u0069\u0073\u0074\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0050\u0068" +
   "\u0079\u0073\u004e\u0065\u0074\u006c\u0069\u0073" +
   "\u0074\u002e\u0050\u0072\u006f\u0070\u0065\u0072" +
   "\u0074\u0079\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006b\u0065\u0079\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0061\u006c\u0075\u0065\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f6\u00ca\u0045\u0024\u004e\u0076\u00ed\u00e9" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

