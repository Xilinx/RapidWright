// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: DeviceResources.capnp

package com.xilinx.rapidwright.interchange;

public final class DeviceResources {
  public static class HashSet {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return HashSet.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ImplementationType value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }
      public final void setHide(boolean value) {
        _setBooleanField(16, value, (boolean)true);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }

    }

  }


  public static class StringRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return StringRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)1);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_b8d7b4e9185c7735.buffer, 48, 7);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_b8d7b4e9185c7735.buffer, 48, 7);
      }

    }

  }


  public static class SiteTypeRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return SiteTypeRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_99f437f74d975d45.buffer, 49, 12);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_99f437f74d975d45.buffer, 49, 12);
      }

    }

  }


  public static class BELPinRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return BELPinRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_ad951a871b67c8bd.buffer, 55, 7);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_ad951a871b67c8bd.buffer, 55, 7);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class WireRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return WireRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_9bbb1fc47d97e0b3.buffer, 55, 5);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_9bbb1fc47d97e0b3.buffer, 55, 5);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class TileTypeRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return TileTypeRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_e2d8f70cc95c539d.buffer, 56, 12);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_e2d8f70cc95c539d.buffer, 56, 12);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class Device {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)15);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Device.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final boolean hasStrList() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.TextList.Builder getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
      }
      public final void setStrList(org.capnproto.TextList.Reader value) {
        _setPointerField(org.capnproto.TextList.factory, 1, value);
      }
      public final org.capnproto.TextList.Builder initStrList(int size) {
        return _initPointerField(org.capnproto.TextList.factory, 1, size);
      }
      public final boolean hasSiteTypeList() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.Builder> getSiteTypeList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.listFactory, 2, null, 0);
      }
      public final void setSiteTypeList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.listFactory, 2, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.Builder> initSiteTypeList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.listFactory, 2, size);
      }
      public final boolean hasTileTypeList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.Builder> getTileTypeList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.listFactory, 3, null, 0);
      }
      public final void setTileTypeList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.listFactory, 3, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.Builder> initTileTypeList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.listFactory, 3, size);
      }
      public final boolean hasTileList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.Builder> getTileList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.listFactory, 4, null, 0);
      }
      public final void setTileList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.listFactory, 4, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.Builder> initTileList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.listFactory, 4, size);
      }
      public final boolean hasWires() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.Builder> getWires() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.listFactory, 5, null, 0);
      }
      public final void setWires(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.listFactory, 5, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.Builder> initWires(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.listFactory, 5, size);
      }
      public final boolean hasNodes() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.Builder> getNodes() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.listFactory, 6, null, 0);
      }
      public final void setNodes(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.listFactory, 6, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.Builder> initNodes(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.listFactory, 6, size);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Builder getPrimLibs() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.factory, 7, null, 0);
      }
      public final void setPrimLibs(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.factory,7, value);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Builder initPrimLibs() {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.factory,7, 0);
      }
      public final boolean hasExceptionMap() {
        return !_pointerFieldIsNull(8);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.Builder> getExceptionMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.listFactory, 8, null, 0);
      }
      public final void setExceptionMap(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.listFactory, 8, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.Builder> initExceptionMap(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.listFactory, 8, size);
      }
      public final boolean hasCellBelMap() {
        return !_pointerFieldIsNull(9);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.Builder> getCellBelMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.listFactory, 9, null, 0);
      }
      public final void setCellBelMap(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.listFactory, 9, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.Builder> initCellBelMap(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.listFactory, 9, size);
      }
      public final boolean hasCellInversions() {
        return !_pointerFieldIsNull(10);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.Builder> getCellInversions() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.listFactory, 10, null, 0);
      }
      public final void setCellInversions(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.listFactory, 10, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.Builder> initCellInversions(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.listFactory, 10, size);
      }
      public final boolean hasPackages() {
        return !_pointerFieldIsNull(11);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Builder> getPackages() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.listFactory, 11, null, 0);
      }
      public final void setPackages(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.listFactory, 11, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Builder> initPackages(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.listFactory, 11, size);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.Builder getConstants() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.factory, 12, null, 0);
      }
      public final void setConstants(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.factory,12, value);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.Builder initConstants() {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.factory,12, 0);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Builder getConstraints() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.factory, 13, null, 0);
      }
      public final void setConstraints(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.factory,13, value);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Builder initConstraints() {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.factory,13, 0);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.Builder getLutDefinitions() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.factory, 14, null, 0);
      }
      public final void setLutDefinitions(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.factory,14, value);
      }
      public final com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.Builder initLutDefinitions() {
        return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.factory,14, 0);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public final boolean hasStrList() {
        return !_pointerFieldIsNull(1);
      }
      public final org.capnproto.TextList.Reader getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
      }

      public final boolean hasSiteTypeList() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.Reader> getSiteTypeList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteType.listFactory, 2, null, 0);
      }

      public final boolean hasTileTypeList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.Reader> getTileTypeList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.TileType.listFactory, 3, null, 0);
      }

      public final boolean hasTileList() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.Reader> getTileList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Tile.listFactory, 4, null, 0);
      }

      public final boolean hasWires() {
        return !_pointerFieldIsNull(5);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.Reader> getWires() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Wire.listFactory, 5, null, 0);
      }

      public final boolean hasNodes() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.Reader> getNodes() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Node.listFactory, 6, null, 0);
      }

      public boolean hasPrimLibs() {
        return !_pointerFieldIsNull(7);
      }
      public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Reader getPrimLibs() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.factory,7,null, 0);
      }

      public final boolean hasExceptionMap() {
        return !_pointerFieldIsNull(8);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.Reader> getExceptionMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PrimToMacroExpansion.listFactory, 8, null, 0);
      }

      public final boolean hasCellBelMap() {
        return !_pointerFieldIsNull(9);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.Reader> getCellBelMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelMapping.listFactory, 9, null, 0);
      }

      public final boolean hasCellInversions() {
        return !_pointerFieldIsNull(10);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.Reader> getCellInversions() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellInversion.listFactory, 10, null, 0);
      }

      public final boolean hasPackages() {
        return !_pointerFieldIsNull(11);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Reader> getPackages() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.listFactory, 11, null, 0);
      }

      public boolean hasConstants() {
        return !_pointerFieldIsNull(12);
      }
      public com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.Reader getConstants() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.factory,12,null, 0);
      }

      public boolean hasConstraints() {
        return !_pointerFieldIsNull(13);
      }
      public com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Reader getConstraints() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.factory,13,null, 0);
      }

      public boolean hasLutDefinitions() {
        return !_pointerFieldIsNull(14);
      }
      public com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.Reader getLutDefinitions() {
        return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.factory,14,null, 0);
      }

    }

    public static class SiteType {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)6);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SiteType.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final boolean hasBelPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.Builder> getBelPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.listFactory, 0, null, 0);
        }
        public final void setBelPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.Builder> initBelPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.listFactory, 0, size);
        }
        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.Builder> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.listFactory, 1, null, 0);
        }
        public final void setPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.Builder> initPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.listFactory, 1, size);
        }
        public final int getLastInput() {
          return _getIntField(1);
        }
        public final void setLastInput(int value) {
          _setIntField(1, value);
        }

        public final boolean hasBels() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.Builder> getBels() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.listFactory, 2, null, 0);
        }
        public final void setBels(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.listFactory, 2, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.Builder> initBels(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.listFactory, 2, size);
        }
        public final boolean hasSitePIPs() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.Builder> getSitePIPs() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.listFactory, 3, null, 0);
        }
        public final void setSitePIPs(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.listFactory, 3, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.Builder> initSitePIPs(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.listFactory, 3, size);
        }
        public final boolean hasSiteWires() {
          return !_pointerFieldIsNull(4);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.Builder> getSiteWires() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.listFactory, 4, null, 0);
        }
        public final void setSiteWires(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.listFactory, 4, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.Builder> initSiteWires(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.listFactory, 4, size);
        }
        public final boolean hasAltSiteTypes() {
          return !_pointerFieldIsNull(5);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getAltSiteTypes() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 5, null, 0);
        }
        public final void setAltSiteTypes(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 5, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initAltSiteTypes(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 5, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final boolean hasBelPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.Reader> getBelPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELPin.listFactory, 0, null, 0);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.Reader> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePin.listFactory, 1, null, 0);
        }

        public final int getLastInput() {
          return _getIntField(1);
        }

        public final boolean hasBels() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.Reader> getBels() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BEL.listFactory, 2, null, 0);
        }

        public final boolean hasSitePIPs() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.Reader> getSitePIPs() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SitePIP.listFactory, 3, null, 0);
        }

        public final boolean hasSiteWires() {
          return !_pointerFieldIsNull(4);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.Reader> getSiteWires() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteWire.listFactory, 4, null, 0);
        }

        public final boolean hasAltSiteTypes() {
          return !_pointerFieldIsNull(5);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getAltSiteTypes() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 5, null, 0);
        }

      }

    }


    public static class ParentPins {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.ParentPins.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setPins(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPins(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

      }

    }


    public static class SiteTypeInTileType {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SiteTypeInTileType.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getPrimaryType() {
          return _getIntField(0);
        }
        public final void setPrimaryType(int value) {
          _setIntField(0, value);
        }

        public final boolean hasPrimaryPinsToTileWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPrimaryPinsToTileWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setPrimaryPinsToTileWires(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPrimaryPinsToTileWires(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
        public final boolean hasAltPinsToPrimaryPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.Builder> getAltPinsToPrimaryPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.listFactory, 1, null, 0);
        }
        public final void setAltPinsToPrimaryPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.Builder> initAltPinsToPrimaryPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getPrimaryType() {
          return _getIntField(0);
        }

        public final boolean hasPrimaryPinsToTileWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPrimaryPinsToTileWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

        public final boolean hasAltPinsToPrimaryPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.Reader> getAltPinsToPrimaryPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParentPins.listFactory, 1, null, 0);
        }

      }

    }


    public static class TileType {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)4);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.TileType.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final boolean hasSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.Builder> getSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.listFactory, 0, null, 0);
        }
        public final void setSiteTypes(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.Builder> initSiteTypes(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.listFactory, 0, size);
        }
        public final boolean hasWires() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }
        public final void setWires(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 1, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initWires(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 1, size);
        }
        public final boolean hasPips() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.Builder> getPips() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.listFactory, 2, null, 0);
        }
        public final void setPips(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.listFactory, 2, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.Builder> initPips(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.listFactory, 2, size);
        }
        public final boolean hasConstants() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.Builder> getConstants() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.listFactory, 3, null, 0);
        }
        public final void setConstants(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.listFactory, 3, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.Builder> initConstants(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.listFactory, 3, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final boolean hasSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.Reader> getSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeInTileType.listFactory, 0, null, 0);
        }

        public final boolean hasWires() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }

        public final boolean hasPips() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.Reader> getPips() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PIP.listFactory, 2, null, 0);
        }

        public final boolean hasConstants() {
          return !_pointerFieldIsNull(3);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.Reader> getConstants() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.WireConstantSources.listFactory, 3, null, 0);
        }

      }

    }


    public static class BELInverter {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.BELInverter.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getNonInvertingPin() {
          return _getIntField(0);
        }
        public final void setNonInvertingPin(int value) {
          _setIntField(0, value);
        }

        public final int getInvertingPin() {
          return _getIntField(1);
        }
        public final void setInvertingPin(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getNonInvertingPin() {
          return _getIntField(0);
        }

        public final int getInvertingPin() {
          return _getIntField(1);
        }

      }

    }


    public static class BEL {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.BEL.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.NON_INVERTING;
            case 1 : return Which.INVERTING;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final int getType() {
          return _getIntField(1);
        }
        public final void setType(int value) {
          _setIntField(1, value);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setPins(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPins(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory getCategory() {
          switch(_getShortField(4)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.LOGIC;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.ROUTING;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.SITE_PORT;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory._NOT_IN_SCHEMA;
          }
        }
        public final void setCategory(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory value) {
          _setShortField(4, (short)value.ordinal());
        }

        public final boolean isNonInverting() {
          return which() == Device.BEL.Which.NON_INVERTING;
        }
        public final org.capnproto.Void getNonInverting() {
          assert which() == Device.BEL.Which.NON_INVERTING:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setNonInverting(org.capnproto.Void value) {
          _setShortField(5, (short)Device.BEL.Which.NON_INVERTING.ordinal());
        }

        public final boolean isInverting() {
          return which() == Device.BEL.Which.INVERTING;
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.Builder getInverting() {
          assert which() == Device.BEL.Which.INVERTING:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.factory, 1, null, 0);
        }
        public final void setInverting(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.Reader value) {
          _setShortField(5, (short)Device.BEL.Which.INVERTING.ordinal());
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.factory,1, value);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.Builder initInverting() {
          _setShortField(5, (short)Device.BEL.Which.INVERTING.ordinal());
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.factory,1, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.NON_INVERTING;
            case 1 : return Which.INVERTING;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getName() {
          return _getIntField(0);
        }

        public final int getType() {
          return _getIntField(1);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory getCategory() {
          switch(_getShortField(4)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.LOGIC;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.ROUTING;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory.SITE_PORT;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.BELCategory._NOT_IN_SCHEMA;
          }
        }

        public final boolean isNonInverting() {
          return which() == Device.BEL.Which.NON_INVERTING;
        }
        public final org.capnproto.Void getNonInverting() {
          assert which() == Device.BEL.Which.NON_INVERTING:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isInverting() {
          return which() == Device.BEL.Which.INVERTING;
        }
        public boolean hasInverting() {
          return !_pointerFieldIsNull(1);
        }
        public com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.Reader getInverting() {
          assert which() == Device.BEL.Which.INVERTING:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.BELInverter.factory,1,null, 0);
        }

      }

      public enum Which {
        NON_INVERTING,
        INVERTING,
        _NOT_IN_SCHEMA,
      }
    }


    public enum BELCategory {
      LOGIC,
      ROUTING,
      SITE_PORT,
      _NOT_IN_SCHEMA,
    }

    public static class Site {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Site.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final int getType() {
          return _getIntField(1);
        }
        public final void setType(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final int getType() {
          return _getIntField(1);
        }

      }

    }


    public static class Tile {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Tile.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final int getType() {
          return _getIntField(1);
        }
        public final void setType(int value) {
          _setIntField(1, value);
        }

        public final boolean hasSites() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.Builder> getSites() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.listFactory, 0, null, 0);
        }
        public final void setSites(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.Builder> initSites(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.listFactory, 0, size);
        }
        public final short getRow() {
          return _getShortField(4);
        }
        public final void setRow(short value) {
          _setShortField(4, value);
        }

        public final short getCol() {
          return _getShortField(5);
        }
        public final void setCol(short value) {
          _setShortField(5, value);
        }

        public final int getTilePatIdx() {
          return _getIntField(3);
        }
        public final void setTilePatIdx(int value) {
          _setIntField(3, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final int getType() {
          return _getIntField(1);
        }

        public final boolean hasSites() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.Reader> getSites() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Site.listFactory, 0, null, 0);
        }

        public final short getRow() {
          return _getShortField(4);
        }

        public final short getCol() {
          return _getShortField(5);
        }

        public final int getTilePatIdx() {
          return _getIntField(3);
        }

      }

    }


    public static class BELPin {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.BELPin.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }
        public final void setDir(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction value) {
          _setShortField(2, (short)value.ordinal());
        }

        public final int getBel() {
          return _getIntField(2);
        }
        public final void setBel(int value) {
          _setIntField(2, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }

        public final int getBel() {
          return _getIntField(2);
        }

      }

    }


    public static class SiteWire {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SiteWire.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setPins(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPins(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

      }

    }


    public static class SitePIP {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SitePIP.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getInpin() {
          return _getIntField(0);
        }
        public final void setInpin(int value) {
          _setIntField(0, value);
        }

        public final int getOutpin() {
          return _getIntField(1);
        }
        public final void setOutpin(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getInpin() {
          return _getIntField(0);
        }

        public final int getOutpin() {
          return _getIntField(1);
        }

      }

    }


    public static class SitePin {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SitePin.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }
        public final void setDir(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction value) {
          _setShortField(2, (short)value.ordinal());
        }

        public final int getBelpin() {
          return _getIntField(2);
        }
        public final void setBelpin(int value) {
          _setIntField(2, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }

        public final int getBelpin() {
          return _getIntField(2);
        }

      }

    }


    public static class Wire {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Wire.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getTile() {
          return _getIntField(0);
        }
        public final void setTile(int value) {
          _setIntField(0, value);
        }

        public final int getWire() {
          return _getIntField(1);
        }
        public final void setWire(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getTile() {
          return _getIntField(0);
        }

        public final int getWire() {
          return _getIntField(1);
        }

      }

    }


    public static class Node {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Node.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setWires(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initWires(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

      }

    }


    public static class PIP {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.PIP.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.CONVENTIONAL;
            case 1 : return Which.PSEUDO_CELLS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getWire0() {
          return _getIntField(0);
        }
        public final void setWire0(int value) {
          _setIntField(0, value);
        }

        public final int getWire1() {
          return _getIntField(1);
        }
        public final void setWire1(int value) {
          _setIntField(1, value);
        }

        public final boolean getDirectional() {
          return _getBooleanField(64);
        }
        public final void setDirectional(boolean value) {
          _setBooleanField(64, value);
        }

        public final boolean getBuffered20() {
          return _getBooleanField(65);
        }
        public final void setBuffered20(boolean value) {
          _setBooleanField(65, value);
        }

        public final boolean getBuffered21() {
          return _getBooleanField(66);
        }
        public final void setBuffered21(boolean value) {
          _setBooleanField(66, value);
        }

        public final boolean isConventional() {
          return which() == Device.PIP.Which.CONVENTIONAL;
        }
        public final org.capnproto.Void getConventional() {
          assert which() == Device.PIP.Which.CONVENTIONAL:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setConventional(org.capnproto.Void value) {
          _setShortField(5, (short)Device.PIP.Which.CONVENTIONAL.ordinal());
        }

        public final boolean isPseudoCells() {
          return which() == Device.PIP.Which.PSEUDO_CELLS;
        }
        public final boolean hasPseudoCells() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.Builder> getPseudoCells() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.listFactory, 0, null, 0);
        }
        public final void setPseudoCells(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.Reader> value) {
          _setShortField(5, (short)Device.PIP.Which.PSEUDO_CELLS.ordinal());
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.Builder> initPseudoCells(int size) {
          _setShortField(5, (short)Device.PIP.Which.PSEUDO_CELLS.ordinal());
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.listFactory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(5)) {
            case 0 : return Which.CONVENTIONAL;
            case 1 : return Which.PSEUDO_CELLS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getWire0() {
          return _getIntField(0);
        }

        public final int getWire1() {
          return _getIntField(1);
        }

        public final boolean getDirectional() {
          return _getBooleanField(64);
        }

        public final boolean getBuffered20() {
          return _getBooleanField(65);
        }

        public final boolean getBuffered21() {
          return _getBooleanField(66);
        }

        public final boolean isConventional() {
          return which() == Device.PIP.Which.CONVENTIONAL;
        }
        public final org.capnproto.Void getConventional() {
          assert which() == Device.PIP.Which.CONVENTIONAL:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isPseudoCells() {
          return which() == Device.PIP.Which.PSEUDO_CELLS;
        }
        public final boolean hasPseudoCells() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.Reader> getPseudoCells() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.PseudoCell.listFactory, 0, null, 0);
        }

      }

      public enum Which {
        CONVENTIONAL,
        PSEUDO_CELLS,
        _NOT_IN_SCHEMA,
      }
    }


    public static class PseudoCell {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.PseudoCell.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getBel() {
          return _getIntField(0);
        }
        public final void setBel(int value) {
          _setIntField(0, value);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setPins(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPins(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getBel() {
          return _getIntField(0);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPins() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

      }

    }


    public static class WireConstantSources {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.WireConstantSources.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setWires(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initWires(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
          switch(_getShortField(0)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
          }
        }
        public final void setConstant(com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType value) {
          _setShortField(0, (short)value.ordinal());
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasWires() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getWires() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
          switch(_getShortField(0)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
          }
        }

      }

    }


    public static class PrimToMacroExpansion {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.PrimToMacroExpansion.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getPrimName() {
          return _getIntField(0);
        }
        public final void setPrimName(int value) {
          _setIntField(0, value);
        }

        public final int getMacroName() {
          return _getIntField(1);
        }
        public final void setMacroName(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getPrimName() {
          return _getIntField(0);
        }

        public final int getMacroName() {
          return _getIntField(1);
        }

      }

    }


    public static class CellBelMapping {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CellBelMapping.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCell() {
          return _getIntField(0);
        }
        public final void setCell(int value) {
          _setIntField(0, value);
        }

        public final boolean hasCommonPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.Builder> getCommonPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.listFactory, 0, null, 0);
        }
        public final void setCommonPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.Builder> initCommonPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.listFactory, 0, size);
        }
        public final boolean hasParameterPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.Builder> getParameterPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.listFactory, 1, null, 0);
        }
        public final void setParameterPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.Builder> initParameterPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCell() {
          return _getIntField(0);
        }

        public final boolean hasCommonPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.Reader> getCommonPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CommonCellBelPinMaps.listFactory, 0, null, 0);
        }

        public final boolean hasParameterPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.Reader> getParameterPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterCellBelPinMaps.listFactory, 1, null, 0);
        }

      }

    }


    public static class CellBelPinEntry {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CellBelPinEntry.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCellPin() {
          return _getIntField(0);
        }
        public final void setCellPin(int value) {
          _setIntField(0, value);
        }

        public final int getBelPin() {
          return _getIntField(1);
        }
        public final void setBelPin(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCellPin() {
          return _getIntField(0);
        }

        public final int getBelPin() {
          return _getIntField(1);
        }

      }

    }


    public static class SiteTypeBelEntry {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.SiteTypeBelEntry.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getSiteType() {
          return _getIntField(0);
        }
        public final void setSiteType(int value) {
          _setIntField(0, value);
        }

        public final boolean hasBels() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getBels() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setBels(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initBels(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getSiteType() {
          return _getIntField(0);
        }

        public final boolean hasBels() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getBels() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

      }

    }


    public static class CommonCellBelPinMaps {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CommonCellBelPinMaps.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.Builder> getSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.listFactory, 0, null, 0);
        }
        public final void setSiteTypes(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.Builder> initSiteTypes(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.listFactory, 0, size);
        }
        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Builder> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, null, 0);
        }
        public final void setPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Builder> initPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.Reader> getSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.SiteTypeBelEntry.listFactory, 0, null, 0);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Reader> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, null, 0);
        }

      }

    }


    public static class ParameterSiteTypeBelEntry {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.ParameterSiteTypeBelEntry.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getBel() {
          return _getIntField(0);
        }
        public final void setBel(int value) {
          _setIntField(0, value);
        }

        public final int getSiteType() {
          return _getIntField(1);
        }
        public final void setSiteType(int value) {
          _setIntField(1, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder getParameter() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory, 0, null, 0);
        }
        public final void setParameter(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder initParameter() {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getBel() {
          return _getIntField(0);
        }

        public final int getSiteType() {
          return _getIntField(1);
        }

        public boolean hasParameter() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader getParameter() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0,null, 0);
        }

      }

    }


    public static class ParameterCellBelPinMaps {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.ParameterCellBelPinMaps.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasParametersSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.Builder> getParametersSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.listFactory, 0, null, 0);
        }
        public final void setParametersSiteTypes(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.Builder> initParametersSiteTypes(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.listFactory, 0, size);
        }
        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Builder> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, null, 0);
        }
        public final void setPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Builder> initPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasParametersSiteTypes() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.Reader> getParametersSiteTypes() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.ParameterSiteTypeBelEntry.listFactory, 0, null, 0);
        }

        public final boolean hasPins() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.Reader> getPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellBelPinEntry.listFactory, 1, null, 0);
        }

      }

    }


    public static class Package {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Package.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final boolean hasPackagePins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.Builder> getPackagePins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.listFactory, 0, null, 0);
        }
        public final void setPackagePins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.Builder> initPackagePins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.listFactory, 0, size);
        }
        public final boolean hasGrades() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.Builder> getGrades() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.listFactory, 1, null, 0);
        }
        public final void setGrades(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.Builder> initGrades(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public final boolean hasPackagePins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.Reader> getPackagePins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.PackagePin.listFactory, 0, null, 0);
        }

        public final boolean hasGrades() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.Reader> getGrades() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Package.Grade.listFactory, 1, null, 0);
        }

      }

      public static class PackagePin {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Package.PackagePin.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getPackagePin() {
            return _getIntField(0);
          }
          public final void setPackagePin(int value) {
            _setIntField(0, value);
          }

          public final Site.Builder getSite() {
            return new Device.Package.PackagePin.Site.Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final Site.Builder initSite() {
            _setShortField(2,(short)0);
            _setIntField(2,0);
  return new Device.Package.PackagePin.Site.Builder(segment, data, pointers, dataSize, pointerCount);
          }

          public final Bel.Builder getBel() {
            return new Device.Package.PackagePin.Bel.Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final Bel.Builder initBel() {
            _setShortField(3,(short)0);
            _setIntField(3,0);
  return new Device.Package.PackagePin.Bel.Builder(segment, data, pointers, dataSize, pointerCount);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getPackagePin() {
            return _getIntField(0);
          }

          public Site.Reader getSite() {
            return new Device.Package.PackagePin.Site.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Bel.Reader getBel() {
            return new Device.Package.PackagePin.Bel.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

        }

        public static class Site {
          public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
          public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
              return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
              return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
              return Device.Package.PackagePin.Site.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
              return builder.asReader();
            }
          }
          public static final Factory factory = new Factory();
          public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
            new org.capnproto.StructList.Factory<Builder, Reader>(factory);
          public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
              super(segment, data, pointers, dataSize, pointerCount);
            }
            public Which which() {
              switch(_getShortField(2)) {
                case 0 : return Which.NO_SITE;
                case 1 : return Which.SITE;
                default: return Which._NOT_IN_SCHEMA;
              }
            }
            public final Reader asReader() {
              return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean isNoSite() {
              return which() == Device.Package.PackagePin.Site.Which.NO_SITE;
            }
            public final org.capnproto.Void getNoSite() {
              assert which() == Device.Package.PackagePin.Site.Which.NO_SITE:
                          "Must check which() before get()ing a union member.";
              return org.capnproto.Void.VOID;
            }
            public final void setNoSite(org.capnproto.Void value) {
              _setShortField(2, (short)Device.Package.PackagePin.Site.Which.NO_SITE.ordinal());
            }

            public final boolean isSite() {
              return which() == Device.Package.PackagePin.Site.Which.SITE;
            }
            public final int getSite() {
              assert which() == Device.Package.PackagePin.Site.Which.SITE:
                          "Must check which() before get()ing a union member.";
              return _getIntField(2);
            }
            public final void setSite(int value) {
              _setShortField(2, (short)Device.Package.PackagePin.Site.Which.SITE.ordinal());
              _setIntField(2, value);
            }

          }

          public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
              super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Which which() {
              switch(_getShortField(2)) {
                case 0 : return Which.NO_SITE;
                case 1 : return Which.SITE;
                default: return Which._NOT_IN_SCHEMA;
              }
            }
            public final boolean isNoSite() {
              return which() == Device.Package.PackagePin.Site.Which.NO_SITE;
            }
            public final org.capnproto.Void getNoSite() {
              assert which() == Device.Package.PackagePin.Site.Which.NO_SITE:
                          "Must check which() before get()ing a union member.";
              return org.capnproto.Void.VOID;
            }

            public final boolean isSite() {
              return which() == Device.Package.PackagePin.Site.Which.SITE;
            }
            public final int getSite() {
              assert which() == Device.Package.PackagePin.Site.Which.SITE:
                          "Must check which() before get()ing a union member.";
              return _getIntField(2);
            }

          }

          public enum Which {
            NO_SITE,
            SITE,
            _NOT_IN_SCHEMA,
          }
        }


        public static class Bel {
          public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
          public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
            public Factory() {
            }
            public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
              return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
            }
            public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
              return new Builder(segment, data, pointers, dataSize, pointerCount);
            }
            public final org.capnproto.StructSize structSize() {
              return Device.Package.PackagePin.Bel.STRUCT_SIZE;
            }
            public final Reader asReader(Builder builder) {
              return builder.asReader();
            }
          }
          public static final Factory factory = new Factory();
          public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
            new org.capnproto.StructList.Factory<Builder, Reader>(factory);
          public static final class Builder extends org.capnproto.StructBuilder {
            Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
              super(segment, data, pointers, dataSize, pointerCount);
            }
            public Which which() {
              switch(_getShortField(3)) {
                case 0 : return Which.NO_BEL;
                case 1 : return Which.BEL;
                default: return Which._NOT_IN_SCHEMA;
              }
            }
            public final Reader asReader() {
              return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
            }
            public final boolean isNoBel() {
              return which() == Device.Package.PackagePin.Bel.Which.NO_BEL;
            }
            public final org.capnproto.Void getNoBel() {
              assert which() == Device.Package.PackagePin.Bel.Which.NO_BEL:
                          "Must check which() before get()ing a union member.";
              return org.capnproto.Void.VOID;
            }
            public final void setNoBel(org.capnproto.Void value) {
              _setShortField(3, (short)Device.Package.PackagePin.Bel.Which.NO_BEL.ordinal());
            }

            public final boolean isBel() {
              return which() == Device.Package.PackagePin.Bel.Which.BEL;
            }
            public final int getBel() {
              assert which() == Device.Package.PackagePin.Bel.Which.BEL:
                          "Must check which() before get()ing a union member.";
              return _getIntField(3);
            }
            public final void setBel(int value) {
              _setShortField(3, (short)Device.Package.PackagePin.Bel.Which.BEL.ordinal());
              _setIntField(3, value);
            }

          }

          public static final class Reader extends org.capnproto.StructReader {
            Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
              super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
            }

            public Which which() {
              switch(_getShortField(3)) {
                case 0 : return Which.NO_BEL;
                case 1 : return Which.BEL;
                default: return Which._NOT_IN_SCHEMA;
              }
            }
            public final boolean isNoBel() {
              return which() == Device.Package.PackagePin.Bel.Which.NO_BEL;
            }
            public final org.capnproto.Void getNoBel() {
              assert which() == Device.Package.PackagePin.Bel.Which.NO_BEL:
                          "Must check which() before get()ing a union member.";
              return org.capnproto.Void.VOID;
            }

            public final boolean isBel() {
              return which() == Device.Package.PackagePin.Bel.Which.BEL;
            }
            public final int getBel() {
              assert which() == Device.Package.PackagePin.Bel.Which.BEL:
                          "Must check which() before get()ing a union member.";
              return _getIntField(3);
            }

          }

          public enum Which {
            NO_BEL,
            BEL,
            _NOT_IN_SCHEMA,
          }
        }


      }


      public static class Grade {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Package.Grade.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getName() {
            return _getIntField(0);
          }
          public final void setName(int value) {
            _setIntField(0, value);
          }

          public final int getSpeedGrade() {
            return _getIntField(1);
          }
          public final void setSpeedGrade(int value) {
            _setIntField(1, value);
          }

          public final int getTemperatureGrade() {
            return _getIntField(2);
          }
          public final void setTemperatureGrade(int value) {
            _setIntField(2, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getName() {
            return _getIntField(0);
          }

          public final int getSpeedGrade() {
            return _getIntField(1);
          }

          public final int getTemperatureGrade() {
            return _getIntField(2);
          }

        }

      }


    }


    public enum ConstantType {
      NO_PREFERENCE,
      GND,
      VCC,
      _NOT_IN_SCHEMA,
    }

    public static class Constants {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)3);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Constants.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getDefaultBestConstant() {
          switch(_getShortField(0)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
          }
        }
        public final void setDefaultBestConstant(com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType value) {
          _setShortField(0, (short)value.ordinal());
        }

        public final boolean hasBestConstantExceptions() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.Builder> getBestConstantExceptions() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.listFactory, 0, null, 0);
        }
        public final void setBestConstantExceptions(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.Builder> initBestConstantExceptions(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.listFactory, 0, size);
        }
        public final boolean hasSiteSources() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.Builder> getSiteSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.listFactory, 1, null, 0);
        }
        public final void setSiteSources(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.Builder> initSiteSources(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.listFactory, 1, size);
        }
        public final boolean hasNodeSources() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.Builder> getNodeSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.listFactory, 2, null, 0);
        }
        public final void setNodeSources(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.listFactory, 2, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.Builder> initNodeSources(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.listFactory, 2, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getDefaultBestConstant() {
          switch(_getShortField(0)) {
            case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
            case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
            case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
            default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
          }
        }

        public final boolean hasBestConstantExceptions() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.Reader> getBestConstantExceptions() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SitePinConstantExceptions.listFactory, 0, null, 0);
        }

        public final boolean hasSiteSources() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.Reader> getSiteSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.SiteConstantSource.listFactory, 1, null, 0);
        }

        public final boolean hasNodeSources() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.Reader> getNodeSources() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constants.NodeConstantSource.listFactory, 2, null, 0);
        }

      }

      public static class SitePinConstantExceptions {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constants.SitePinConstantExceptions.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getSiteType() {
            return _getIntField(0);
          }
          public final void setSiteType(int value) {
            _setIntField(0, value);
          }

          public final int getSitePin() {
            return _getIntField(1);
          }
          public final void setSitePin(int value) {
            _setIntField(1, value);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getBestConstant() {
            switch(_getShortField(4)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }
          public final void setBestConstant(com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType value) {
            _setShortField(4, (short)value.ordinal());
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getSiteType() {
            return _getIntField(0);
          }

          public final int getSitePin() {
            return _getIntField(1);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getBestConstant() {
            switch(_getShortField(4)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }

        }

      }


      public static class SiteConstantSource {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constants.SiteConstantSource.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getSiteType() {
            return _getIntField(0);
          }
          public final void setSiteType(int value) {
            _setIntField(0, value);
          }

          public final int getBel() {
            return _getIntField(1);
          }
          public final void setBel(int value) {
            _setIntField(1, value);
          }

          public final int getBelPin() {
            return _getIntField(2);
          }
          public final void setBelPin(int value) {
            _setIntField(2, value);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
            switch(_getShortField(6)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }
          public final void setConstant(com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType value) {
            _setShortField(6, (short)value.ordinal());
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getSiteType() {
            return _getIntField(0);
          }

          public final int getBel() {
            return _getIntField(1);
          }

          public final int getBelPin() {
            return _getIntField(2);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
            switch(_getShortField(6)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }

        }

      }


      public static class NodeConstantSource {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constants.NodeConstantSource.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getTile() {
            return _getIntField(0);
          }
          public final void setTile(int value) {
            _setIntField(0, value);
          }

          public final int getWire() {
            return _getIntField(1);
          }
          public final void setWire(int value) {
            _setIntField(1, value);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
            switch(_getShortField(4)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }
          public final void setConstant(com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType value) {
            _setShortField(4, (short)value.ordinal());
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final int getTile() {
            return _getIntField(0);
          }

          public final int getWire() {
            return _getIntField(1);
          }

          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType getConstant() {
            switch(_getShortField(4)) {
              case 0 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.NO_PREFERENCE;
              case 1 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.GND;
              case 2 : return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType.VCC;
              default: return com.xilinx.rapidwright.interchange.DeviceResources.Device.ConstantType._NOT_IN_SCHEMA;
            }
          }

        }

      }


    }


    public static class CellPinInversionParameter {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CellPinInversionParameter.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.INV_ONLY;
            case 1 : return Which.PARAMETER;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean isInvOnly() {
          return which() == Device.CellPinInversionParameter.Which.INV_ONLY;
        }
        public final org.capnproto.Void getInvOnly() {
          assert which() == Device.CellPinInversionParameter.Which.INV_ONLY:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setInvOnly(org.capnproto.Void value) {
          _setShortField(0, (short)Device.CellPinInversionParameter.Which.INV_ONLY.ordinal());
        }

        public final boolean isParameter() {
          return which() == Device.CellPinInversionParameter.Which.PARAMETER;
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder getParameter() {
          assert which() == Device.CellPinInversionParameter.Which.PARAMETER:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory, 0, null, 0);
        }
        public final void setParameter(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader value) {
          _setShortField(0, (short)Device.CellPinInversionParameter.Which.PARAMETER.ordinal());
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder initParameter() {
          _setShortField(0, (short)Device.CellPinInversionParameter.Which.PARAMETER.ordinal());
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(0)) {
            case 0 : return Which.INV_ONLY;
            case 1 : return Which.PARAMETER;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final boolean isInvOnly() {
          return which() == Device.CellPinInversionParameter.Which.INV_ONLY;
        }
        public final org.capnproto.Void getInvOnly() {
          assert which() == Device.CellPinInversionParameter.Which.INV_ONLY:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isParameter() {
          return which() == Device.CellPinInversionParameter.Which.PARAMETER;
        }
        public boolean hasParameter() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader getParameter() {
          assert which() == Device.CellPinInversionParameter.Which.PARAMETER:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.factory,0,null, 0);
        }

      }

      public enum Which {
        INV_ONLY,
        PARAMETER,
        _NOT_IN_SCHEMA,
      }
    }


    public static class CellPinInversion {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CellPinInversion.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCellPin() {
          return _getIntField(0);
        }
        public final void setCellPin(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Builder getNotInverting() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory, 0, null, 0);
        }
        public final void setNotInverting(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Builder initNotInverting() {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,0, 0);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Builder getInverting() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory, 1, null, 0);
        }
        public final void setInverting(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,1, value);
        }
        public final com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Builder initInverting() {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,1, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCellPin() {
          return _getIntField(0);
        }

        public boolean hasNotInverting() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Reader getNotInverting() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,0,null, 0);
        }

        public boolean hasInverting() {
          return !_pointerFieldIsNull(1);
        }
        public com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.Reader getInverting() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversionParameter.factory,1,null, 0);
        }

      }

    }


    public static class CellInversion {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.CellInversion.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getCell() {
          return _getIntField(0);
        }
        public final void setCell(int value) {
          _setIntField(0, value);
        }

        public final boolean hasCellPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.Builder> getCellPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.listFactory, 0, null, 0);
        }
        public final void setCellPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.Builder> initCellPins(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.listFactory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getCell() {
          return _getIntField(0);
        }

        public final boolean hasCellPins() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.Reader> getCellPins() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.CellPinInversion.listFactory, 0, null, 0);
        }

      }

    }


    public static class Constraints {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)3);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.Constraints.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasTags() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.Builder> getTags() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.listFactory, 0, null, 0);
        }
        public final void setTags(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.Builder> initTags(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.listFactory, 0, size);
        }
        public final boolean hasRoutedTags() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.Builder> getRoutedTags() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.listFactory, 1, null, 0);
        }
        public final void setRoutedTags(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.Builder> initRoutedTags(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.listFactory, 1, size);
        }
        public final boolean hasCellConstraints() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.Builder> getCellConstraints() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.listFactory, 2, null, 0);
        }
        public final void setCellConstraints(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.listFactory, 2, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.Builder> initCellConstraints(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.listFactory, 2, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasTags() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.Reader> getTags() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.Tag.listFactory, 0, null, 0);
        }

        public final boolean hasRoutedTags() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.Reader> getRoutedTags() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTag.listFactory, 1, null, 0);
        }

        public final boolean hasCellConstraints() {
          return !_pointerFieldIsNull(2);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.Reader> getCellConstraints() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.CellConstraint.listFactory, 2, null, 0);
        }

      }

      public static class State {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.State.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasState() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getState() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setState(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setState(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initState(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasDescription() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getDescription() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setDescription(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setDescription(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initDescription(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasState() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getState() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasDescription() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getDescription() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

        }

      }


      public static class Tag {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)5);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.Tag.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.SITE_TYPES;
              case 1 : return Which.TILE_TYPES;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasTag() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setTag(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setTag(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initTag(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasDescription() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getDescription() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setDescription(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setDescription(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initDescription(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
          public final boolean hasDefault() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.Text.Builder getDefault() {
            return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
          }
          public final void setDefault(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 2, value);
          }
          public final void setDefault(String value) {
            _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initDefault(int size) {
            return _initPointerField(org.capnproto.Text.factory, 2, size);
          }
          public final boolean isSiteTypes() {
            return which() == Device.Constraints.Tag.Which.SITE_TYPES;
          }
          public final boolean hasSiteTypes() {
            return !_pointerFieldIsNull(3);
          }
          public final org.capnproto.TextList.Builder getSiteTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 3, null, 0);
          }
          public final void setSiteTypes(org.capnproto.TextList.Reader value) {
            _setShortField(0, (short)Device.Constraints.Tag.Which.SITE_TYPES.ordinal());
            _setPointerField(org.capnproto.TextList.factory, 3, value);
          }
          public final org.capnproto.TextList.Builder initSiteTypes(int size) {
            _setShortField(0, (short)Device.Constraints.Tag.Which.SITE_TYPES.ordinal());
            return _initPointerField(org.capnproto.TextList.factory, 3, size);
          }
          public final boolean isTileTypes() {
            return which() == Device.Constraints.Tag.Which.TILE_TYPES;
          }
          public final boolean hasTileTypes() {
            return !_pointerFieldIsNull(3);
          }
          public final org.capnproto.TextList.Builder getTileTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 3, null, 0);
          }
          public final void setTileTypes(org.capnproto.TextList.Reader value) {
            _setShortField(0, (short)Device.Constraints.Tag.Which.TILE_TYPES.ordinal());
            _setPointerField(org.capnproto.TextList.factory, 3, value);
          }
          public final org.capnproto.TextList.Builder initTileTypes(int size) {
            _setShortField(0, (short)Device.Constraints.Tag.Which.TILE_TYPES.ordinal());
            return _initPointerField(org.capnproto.TextList.factory, 3, size);
          }
          public final boolean hasStates() {
            return !_pointerFieldIsNull(4);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.Builder> getStates() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.listFactory, 4, null, 0);
          }
          public final void setStates(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.Reader> value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.listFactory, 4, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.Builder> initStates(int size) {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.listFactory, 4, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.SITE_TYPES;
              case 1 : return Which.TILE_TYPES;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public boolean hasTag() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasDescription() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getDescription() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

          public boolean hasDefault() {
            return !_pointerFieldIsNull(2);
          }
          public org.capnproto.Text.Reader getDefault() {
            return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
          }

          public final boolean isSiteTypes() {
            return which() == Device.Constraints.Tag.Which.SITE_TYPES;
          }
          public final boolean hasSiteTypes() {
            return !_pointerFieldIsNull(3);
          }
          public final org.capnproto.TextList.Reader getSiteTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 3, null, 0);
          }

          public final boolean isTileTypes() {
            return which() == Device.Constraints.Tag.Which.TILE_TYPES;
          }
          public final boolean hasTileTypes() {
            return !_pointerFieldIsNull(3);
          }
          public final org.capnproto.TextList.Reader getTileTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 3, null, 0);
          }

          public final boolean hasStates() {
            return !_pointerFieldIsNull(4);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.Reader> getStates() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.State.listFactory, 4, null, 0);
          }

        }

        public enum Which {
          SITE_TYPES,
          TILE_TYPES,
          _NOT_IN_SCHEMA,
        }
      }


      public static class RoutedTagPin {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.RoutedTagPin.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasPin() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getPin() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setPin(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setPin(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initPin(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasTag() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getTag() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setTag(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setTag(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initTag(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasPin() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getPin() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasTag() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getTag() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

        }

      }


      public static class RoutedTag {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)3);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.RoutedTag.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasRoutedTag() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getRoutedTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setRoutedTag(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setRoutedTag(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initRoutedTag(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasRoutingBel() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getRoutingBel() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setRoutingBel(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setRoutingBel(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initRoutingBel(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
          public final boolean hasBelPins() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.Builder> getBelPins() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.listFactory, 2, null, 0);
          }
          public final void setBelPins(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.Reader> value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.listFactory, 2, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.Builder> initBelPins(int size) {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.listFactory, 2, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasRoutedTag() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getRoutedTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasRoutingBel() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getRoutingBel() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

          public final boolean hasBelPins() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.Reader> getBelPins() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPin.listFactory, 2, null, 0);
          }

        }

      }


      public static class RoutedTagPort {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.RoutedTagPort.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasTag() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setTag(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setTag(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initTag(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasPort() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getPort() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setPort(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setPort(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initPort(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasTag() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public boolean hasPort() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getPort() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

        }

      }


      public static class TagPair {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.TagPair.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.TAG;
              case 1 : return Which.ROUTED_TAG;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isTag() {
            return which() == Device.Constraints.TagPair.Which.TAG;
          }
          public final boolean hasTag() {
            if (which() != Device.Constraints.TagPair.Which.TAG) return false;
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setTag(org.capnproto.Text.Reader value) {
            _setShortField(0, (short)Device.Constraints.TagPair.Which.TAG.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setTag(String value) {
            _setShortField(0, (short)Device.Constraints.TagPair.Which.TAG.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initTag(int size) {
            _setShortField(0, (short)Device.Constraints.TagPair.Which.TAG.ordinal());
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean isRoutedTag() {
            return which() == Device.Constraints.TagPair.Which.ROUTED_TAG;
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Builder getRoutedTag() {
            assert which() == Device.Constraints.TagPair.Which.ROUTED_TAG:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory, 0, null, 0);
          }
          public final void setRoutedTag(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Reader value) {
            _setShortField(0, (short)Device.Constraints.TagPair.Which.ROUTED_TAG.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Builder initRoutedTag() {
            _setShortField(0, (short)Device.Constraints.TagPair.Which.ROUTED_TAG.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0, 0);
          }
          public final boolean hasState() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.Text.Builder getState() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }
          public final void setState(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 1, value);
          }
          public final void setState(String value) {
            _setPointerField(org.capnproto.Text.factory, 1, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initState(int size) {
            return _initPointerField(org.capnproto.Text.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.TAG;
              case 1 : return Which.ROUTED_TAG;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isTag() {
            return which() == Device.Constraints.TagPair.Which.TAG;
          }
          public boolean hasTag() {
            if (which() != Device.Constraints.TagPair.Which.TAG) return false;
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean isRoutedTag() {
            return which() == Device.Constraints.TagPair.Which.ROUTED_TAG;
          }
          public boolean hasRoutedTag() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Reader getRoutedTag() {
            assert which() == Device.Constraints.TagPair.Which.ROUTED_TAG:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0,null, 0);
          }

          public boolean hasState() {
            return !_pointerFieldIsNull(1);
          }
          public org.capnproto.Text.Reader getState() {
            return _getPointerField(org.capnproto.Text.factory, 1, null, 0, 0);
          }

        }

        public enum Which {
          TAG,
          ROUTED_TAG,
          _NOT_IN_SCHEMA,
        }
      }


      public static class TagStates {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.TagStates.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.TAG;
              case 1 : return Which.ROUTED_TAG;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isTag() {
            return which() == Device.Constraints.TagStates.Which.TAG;
          }
          public final boolean hasTag() {
            if (which() != Device.Constraints.TagStates.Which.TAG) return false;
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setTag(org.capnproto.Text.Reader value) {
            _setShortField(0, (short)Device.Constraints.TagStates.Which.TAG.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setTag(String value) {
            _setShortField(0, (short)Device.Constraints.TagStates.Which.TAG.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initTag(int size) {
            _setShortField(0, (short)Device.Constraints.TagStates.Which.TAG.ordinal());
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean isRoutedTag() {
            return which() == Device.Constraints.TagStates.Which.ROUTED_TAG;
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Builder getRoutedTag() {
            assert which() == Device.Constraints.TagStates.Which.ROUTED_TAG:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory, 0, null, 0);
          }
          public final void setRoutedTag(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Reader value) {
            _setShortField(0, (short)Device.Constraints.TagStates.Which.ROUTED_TAG.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Builder initRoutedTag() {
            _setShortField(0, (short)Device.Constraints.TagStates.Which.ROUTED_TAG.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0, 0);
          }
          public final boolean hasStates() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Builder getStates() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }
          public final void setStates(org.capnproto.TextList.Reader value) {
            _setPointerField(org.capnproto.TextList.factory, 1, value);
          }
          public final org.capnproto.TextList.Builder initStates(int size) {
            return _initPointerField(org.capnproto.TextList.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.TAG;
              case 1 : return Which.ROUTED_TAG;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isTag() {
            return which() == Device.Constraints.TagStates.Which.TAG;
          }
          public boolean hasTag() {
            if (which() != Device.Constraints.TagStates.Which.TAG) return false;
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getTag() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean isRoutedTag() {
            return which() == Device.Constraints.TagStates.Which.ROUTED_TAG;
          }
          public boolean hasRoutedTag() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.Reader getRoutedTag() {
            assert which() == Device.Constraints.TagStates.Which.ROUTED_TAG:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.RoutedTagPort.factory,0,null, 0);
          }

          public final boolean hasStates() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Reader getStates() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }

        }

        public enum Which {
          TAG,
          ROUTED_TAG,
          _NOT_IN_SCHEMA,
        }
      }


      public static class BELLocation {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.BELLocation.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.ANY_BEL;
              case 1 : return Which.NAME;
              case 2 : return Which.BELS;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isAnyBel() {
            return which() == Device.Constraints.BELLocation.Which.ANY_BEL;
          }
          public final org.capnproto.Void getAnyBel() {
            assert which() == Device.Constraints.BELLocation.Which.ANY_BEL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setAnyBel(org.capnproto.Void value) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.ANY_BEL.ordinal());
          }

          public final boolean isName() {
            return which() == Device.Constraints.BELLocation.Which.NAME;
          }
          public final boolean hasName() {
            if (which() != Device.Constraints.BELLocation.Which.NAME) return false;
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setName(org.capnproto.Text.Reader value) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.NAME.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setName(String value) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.NAME.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initName(int size) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.NAME.ordinal());
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean isBels() {
            return which() == Device.Constraints.BELLocation.Which.BELS;
          }
          public final boolean hasBels() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Builder getBels() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }
          public final void setBels(org.capnproto.TextList.Reader value) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.BELS.ordinal());
            _setPointerField(org.capnproto.TextList.factory, 0, value);
          }
          public final org.capnproto.TextList.Builder initBels(int size) {
            _setShortField(0, (short)Device.Constraints.BELLocation.Which.BELS.ordinal());
            return _initPointerField(org.capnproto.TextList.factory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.ANY_BEL;
              case 1 : return Which.NAME;
              case 2 : return Which.BELS;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isAnyBel() {
            return which() == Device.Constraints.BELLocation.Which.ANY_BEL;
          }
          public final org.capnproto.Void getAnyBel() {
            assert which() == Device.Constraints.BELLocation.Which.ANY_BEL:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isName() {
            return which() == Device.Constraints.BELLocation.Which.NAME;
          }
          public boolean hasName() {
            if (which() != Device.Constraints.BELLocation.Which.NAME) return false;
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean isBels() {
            return which() == Device.Constraints.BELLocation.Which.BELS;
          }
          public final boolean hasBels() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Reader getBels() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }

        }

        public enum Which {
          ANY_BEL,
          NAME,
          BELS,
          _NOT_IN_SCHEMA,
        }
      }


      public static class ConstraintLocation {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)3);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.ConstraintLocation.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.IMPLIES;
              case 1 : return Which.REQUIRES;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasSiteTypes() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Builder getSiteTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }
          public final void setSiteTypes(org.capnproto.TextList.Reader value) {
            _setPointerField(org.capnproto.TextList.factory, 0, value);
          }
          public final org.capnproto.TextList.Builder initSiteTypes(int size) {
            return _initPointerField(org.capnproto.TextList.factory, 0, size);
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.Builder getBel() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.factory, 1, null, 0);
          }
          public final void setBel(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.Reader value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.factory,1, value);
          }
          public final com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.Builder initBel() {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.factory,1, 0);
          }
          public final boolean isImplies() {
            return which() == Device.Constraints.ConstraintLocation.Which.IMPLIES;
          }
          public final boolean hasImplies() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.Builder> getImplies() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.listFactory, 2, null, 0);
          }
          public final void setImplies(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.Reader> value) {
            _setShortField(0, (short)Device.Constraints.ConstraintLocation.Which.IMPLIES.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.listFactory, 2, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.Builder> initImplies(int size) {
            _setShortField(0, (short)Device.Constraints.ConstraintLocation.Which.IMPLIES.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.listFactory, 2, size);
          }
          public final boolean isRequires() {
            return which() == Device.Constraints.ConstraintLocation.Which.REQUIRES;
          }
          public final boolean hasRequires() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.Builder> getRequires() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.listFactory, 2, null, 0);
          }
          public final void setRequires(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.Reader> value) {
            _setShortField(0, (short)Device.Constraints.ConstraintLocation.Which.REQUIRES.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.listFactory, 2, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.Builder> initRequires(int size) {
            _setShortField(0, (short)Device.Constraints.ConstraintLocation.Which.REQUIRES.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.listFactory, 2, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.IMPLIES;
              case 1 : return Which.REQUIRES;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean hasSiteTypes() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Reader getSiteTypes() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }

          public boolean hasBel() {
            return !_pointerFieldIsNull(1);
          }
          public com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.Reader getBel() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.BELLocation.factory,1,null, 0);
          }

          public final boolean isImplies() {
            return which() == Device.Constraints.ConstraintLocation.Which.IMPLIES;
          }
          public final boolean hasImplies() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.Reader> getImplies() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagPair.listFactory, 2, null, 0);
          }

          public final boolean isRequires() {
            return which() == Device.Constraints.ConstraintLocation.Which.REQUIRES;
          }
          public final boolean hasRequires() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.Reader> getRequires() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.TagStates.listFactory, 2, null, 0);
          }

        }

        public enum Which {
          IMPLIES,
          REQUIRES,
          _NOT_IN_SCHEMA,
        }
      }


      public static class CellConstraint {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.Constraints.CellConstraint.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.CELL;
              case 1 : return Which.CELLS;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isCell() {
            return which() == Device.Constraints.CellConstraint.Which.CELL;
          }
          public final boolean hasCell() {
            if (which() != Device.Constraints.CellConstraint.Which.CELL) return false;
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getCell() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setCell(org.capnproto.Text.Reader value) {
            _setShortField(0, (short)Device.Constraints.CellConstraint.Which.CELL.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setCell(String value) {
            _setShortField(0, (short)Device.Constraints.CellConstraint.Which.CELL.ordinal());
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initCell(int size) {
            _setShortField(0, (short)Device.Constraints.CellConstraint.Which.CELL.ordinal());
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean isCells() {
            return which() == Device.Constraints.CellConstraint.Which.CELLS;
          }
          public final boolean hasCells() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Builder getCells() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }
          public final void setCells(org.capnproto.TextList.Reader value) {
            _setShortField(0, (short)Device.Constraints.CellConstraint.Which.CELLS.ordinal());
            _setPointerField(org.capnproto.TextList.factory, 0, value);
          }
          public final org.capnproto.TextList.Builder initCells(int size) {
            _setShortField(0, (short)Device.Constraints.CellConstraint.Which.CELLS.ordinal());
            return _initPointerField(org.capnproto.TextList.factory, 0, size);
          }
          public final boolean hasLocations() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.Builder> getLocations() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.listFactory, 1, null, 0);
          }
          public final void setLocations(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.Reader> value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.listFactory, 1, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.Builder> initLocations(int size) {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.listFactory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(0)) {
              case 0 : return Which.CELL;
              case 1 : return Which.CELLS;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isCell() {
            return which() == Device.Constraints.CellConstraint.Which.CELL;
          }
          public boolean hasCell() {
            if (which() != Device.Constraints.CellConstraint.Which.CELL) return false;
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getCell() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean isCells() {
            return which() == Device.Constraints.CellConstraint.Which.CELLS;
          }
          public final boolean hasCells() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.TextList.Reader getCells() {
            return _getPointerField(org.capnproto.TextList.factory, 0, null, 0);
          }

          public final boolean hasLocations() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.Reader> getLocations() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.Constraints.ConstraintLocation.listFactory, 1, null, 0);
          }

        }

        public enum Which {
          CELL,
          CELLS,
          _NOT_IN_SCHEMA,
        }
      }


    }


    public static class LutDefinitions {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Device.LutDefinitions.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasLutCells() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.Builder> getLutCells() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.listFactory, 0, null, 0);
        }
        public final void setLutCells(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.Builder> initLutCells(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.listFactory, 0, size);
        }
        public final boolean hasLutElements() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.Builder> getLutElements() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.listFactory, 1, null, 0);
        }
        public final void setLutElements(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.Builder> initLutElements(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasLutCells() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.Reader> getLutCells() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutCell.listFactory, 0, null, 0);
        }

        public final boolean hasLutElements() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.Reader> getLutElements() {
          return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElements.listFactory, 1, null, 0);
        }

      }

      public static class LutCell {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.LutDefinitions.LutCell.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasCell() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getCell() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setCell(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setCell(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initCell(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasInputPins() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Builder getInputPins() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }
          public final void setInputPins(org.capnproto.TextList.Reader value) {
            _setPointerField(org.capnproto.TextList.factory, 1, value);
          }
          public final org.capnproto.TextList.Builder initInputPins(int size) {
            return _initPointerField(org.capnproto.TextList.factory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasCell() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getCell() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean hasInputPins() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Reader getInputPins() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }

        }

      }


      public static class LutBel {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)3);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.LutDefinitions.LutBel.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasName() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setName(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setName(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initName(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasInputPins() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Builder getInputPins() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }
          public final void setInputPins(org.capnproto.TextList.Reader value) {
            _setPointerField(org.capnproto.TextList.factory, 1, value);
          }
          public final org.capnproto.TextList.Builder initInputPins(int size) {
            return _initPointerField(org.capnproto.TextList.factory, 1, size);
          }
          public final boolean hasOutputPin() {
            return !_pointerFieldIsNull(2);
          }
          public final org.capnproto.Text.Builder getOutputPin() {
            return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
          }
          public final void setOutputPin(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 2, value);
          }
          public final void setOutputPin(String value) {
            _setPointerField(org.capnproto.Text.factory, 2, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initOutputPin(int size) {
            return _initPointerField(org.capnproto.Text.factory, 2, size);
          }
          public final byte getLowBit() {
            return _getByteField(0);
          }
          public final void setLowBit(byte value) {
            _setByteField(0, value);
          }

          public final byte getHighBit() {
            return _getByteField(1);
          }
          public final void setHighBit(byte value) {
            _setByteField(1, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasName() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getName() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean hasInputPins() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.TextList.Reader getInputPins() {
            return _getPointerField(org.capnproto.TextList.factory, 1, null, 0);
          }

          public boolean hasOutputPin() {
            return !_pointerFieldIsNull(2);
          }
          public org.capnproto.Text.Reader getOutputPin() {
            return _getPointerField(org.capnproto.Text.factory, 2, null, 0, 0);
          }

          public final byte getLowBit() {
            return _getByteField(0);
          }

          public final byte getHighBit() {
            return _getByteField(1);
          }

        }

      }


      public static class LutElement {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.LutDefinitions.LutElement.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final byte getWidth() {
            return _getByteField(0);
          }
          public final void setWidth(byte value) {
            _setByteField(0, value);
          }

          public final boolean hasBels() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.Builder> getBels() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.listFactory, 0, null, 0);
          }
          public final void setBels(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.Reader> value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.listFactory, 0, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.Builder> initBels(int size) {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.listFactory, 0, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public final byte getWidth() {
            return _getByteField(0);
          }

          public final boolean hasBels() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.Reader> getBels() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutBel.listFactory, 0, null, 0);
          }

        }

      }


      public static class LutElements {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)2);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Device.LutDefinitions.LutElements.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean hasSite() {
            return !_pointerFieldIsNull(0);
          }
          public final org.capnproto.Text.Builder getSite() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }
          public final void setSite(org.capnproto.Text.Reader value) {
            _setPointerField(org.capnproto.Text.factory, 0, value);
          }
          public final void setSite(String value) {
            _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
          }
          public final org.capnproto.Text.Builder initSite(int size) {
            return _initPointerField(org.capnproto.Text.factory, 0, size);
          }
          public final boolean hasLuts() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.Builder> getLuts() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.listFactory, 1, null, 0);
          }
          public final void setLuts(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.Reader> value) {
            _setPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.listFactory, 1, value);
          }
          public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.Builder> initLuts(int size) {
            return _initPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.listFactory, 1, size);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public boolean hasSite() {
            return !_pointerFieldIsNull(0);
          }
          public org.capnproto.Text.Reader getSite() {
            return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
          }

          public final boolean hasLuts() {
            return !_pointerFieldIsNull(1);
          }
          public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.Reader> getLuts() {
            return _getPointerField(com.xilinx.rapidwright.interchange.DeviceResources.Device.LutDefinitions.LutElement.listFactory, 1, null, 0);
          }

        }

      }


    }


  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_ba4bfb957945c405 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0005\u00c4\u0045\u0079\u0095\u00fb\u004b\u00ba" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0048\u0061" +
   "\u0073\u0068\u0053\u0065\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u00bd\u00a6\u0096\u00c5\u00ca\u0085\u0092" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0069\u0064\u0065\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fdcd6fd7c67e53f1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f1\u0053\u007e\u00c6\u00d7\u006f\u00cd\u00fd" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0068\u0061" +
   "\u0073\u0068\u0053\u0065\u0074\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u00c4\u0045\u0079\u0095\u00fb\u004b\u00ba" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b8d7b4e9185c7735 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0035\u0077\\\u0018\u00e9\u00b4\u00d7\u00b8" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0053\u0074" +
   "\u0072\u0069\u006e\u0067\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" + "");
public static final org.capnproto.SegmentReader b_e8b8f98170aab35c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0073\u0074" +
   "\u0072\u0069\u006e\u0067\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0077\\\u0018\u00e9\u00b4\u00d7\u00b8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_99f437f74d975d45 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0045\u005d\u0097\u004d\u00f7\u0037\u00f4\u0099" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0053\u0069" +
   "\u0074\u0065\u0054\u0079\u0070\u0065\u0052\u0065" +
   "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8d14cf795384ca4b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004b\u00ca\u0084\u0053\u0079\u00cf\u0014\u008d" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0073\u0069" +
   "\u0074\u0065\u0054\u0079\u0070\u0065\u0052\u0065" +
   "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u005d\u0097\u004d\u00f7\u0037\u00f4\u0099" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad951a871b67c8bd =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bd\u00c8\u0067\u001b\u0087\u001a\u0095\u00ad" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0042\u0045" +
   "\u004c\u0050\u0069\u006e\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0073\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c628455c50530f40 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0002\u0001\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0062\u0065" +
   "\u006c\u0050\u0069\u006e\u0052\u0065\u0066\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u00c8\u0067\u001b\u0087\u001a\u0095\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9bbb1fc47d97e0b3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b3\u00e0\u0097\u007d\u00c4\u001f\u00bb\u009b" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0057\u0069" +
   "\u0072\u0065\u0052\u0065\u0066\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0073\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e3f5925f38774d73 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0073\u004d\u0077\u0038\u005f\u0092\u00f5\u00e3" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00f2\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0077\u0069" +
   "\u0072\u0065\u0052\u0065\u0066\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b3\u00e0\u0097\u007d\u00c4\u001f\u00bb\u009b" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e2d8f70cc95c539d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009d\u0053\\\u00c9\u000c\u00f7\u00d8\u00e2" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0054\u0069" +
   "\u006c\u0065\u0054\u0079\u0070\u0065\u0052\u0065" +
   "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0074\u0069\u006c\u0065\u0054\u0079\u0070\u0065" +
   "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9e4dab2b9833c9a7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a7\u00c9\u0033\u0098\u002b\u00ab\u004d\u009e" +
   "\u0016\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0074\u0069" +
   "\u006c\u0065\u0054\u0079\u0070\u0065\u0052\u0065" +
   "\u0066\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0053\\\u00c9\u000c\u00f7\u00d8\u00e2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ffa75a3a3e5ace96 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0016\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0025\u0023\u0051\u00a6\u006b\u002c\u0026\u009d" +
   "\u000f\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0017\u0002\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0002\u0000\u0000\u004f\u0003\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u0000\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00da\u0076\u0065\u008a\u0054\u00fd\u0054\u00e1" +
   "\u0001\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u00db\u008d\u00cf\u00c0\u007d\u00a1\u0044\u00a2" +
   "\u0001\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u00f6\u00f5\u0062\u00cf\u0067\u0097\u00b9\u00a0" +
   "\u0001\u0001\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0011\u00f8\u0098\u00b1\u00e1\u0081\u0041\u00fb" +
   "\u0005\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u00ec\u00f3\u00fc\u0027\u00a1\u0068\u00a3\u00c9" +
   "\u0005\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u00ab\u0046\u004d\u0018\u0008\u0046\u001f\u00ad" +
   "\u0005\u0001\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0011\u0052\u001c\u0027\u0064\u00d6\u00f9\u00e6" +
   "\u0001\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u004c\u007a\\\u00e5\u005d\u0000\u00ae\u009a" +
   "\u0001\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00e9\u0012\u002b\u0062\u0001\u00c7\u0066\u00ee" +
   "\u00fd\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0087\u0005\u00aa\u0069\u0015\u0084\u00b1\u00ee" +
   "\u00f9\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0045\u00d1\u00d8\u00bc\u0068\u004e\u000b\u00d4" +
   "\u00f5\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0051\u00d1\u0079\u0066\u00b1\u00b0\u0045\u0096" +
   "\u00f5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u00a4\u00a3\u00c1\u009c\u007e\u00bd\u00a9\u00a8" +
   "\u00f1\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0035\u002b\u0042\u00c7\u0049\u00ee\u0048\u00e6" +
   "\u00ed\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00b2\u0023\u003f\u00b9\u0056\u0062\u001a\u00ec" +
   "\u00e9\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00dc\\\u00a3\u003e\u0035\u005b\u0068\u00e5" +
   "\u00e5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00e0\u0073\u0060\u0064\u0069\u001e\u0086\u00d8" +
   "\u00e1\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0031\u0071\u0028\u0041\u001a\u0064\u0002\u008a" +
   "\u00e1\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u00cd\u00a3\u00be\u00ee\u0080\u001c\u009d\u00b0" +
   "\u00e5\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u0096\u00d0\u008a\u00af\u0049\u0004\u00c6\u00a8" +
   "\u00e9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u00db\u008a\u0076\"\u00a4\u0033\u001b\u00a4" +
   "\u00e9\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0032\u0007\u0031\u0092\u00a2\u0070\u008d\u0093" +
   "\u00e9\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u0025\u00e0\u00fb\u0063\u00da\u00e0\u00a8\u00cb" +
   "\u00ed\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u0045\u0034\u008a\u004c\u00d4\u00b5\u0036\u0091" +
   "\u00f1\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0020\u00d1\u00c5\u0047\u00f0\u007a\u00b9\u00c6" +
   "\u00f9\u0000\u0000\u0000\u00c2\u0000\u0000\u0000" +
   "\u00cc\u00a5\u004b\u006e\u0065\u00f1\u00b5\u00ab" +
   "\u00fd\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u00f9\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u00f9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0090\u0039\u00ca\u001d\u0034\u0008\u003e\u0088" +
   "\u00f9\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u001d\u00e4\u00dd\u0006\u006d\u00e3\u0081\u00cd" +
   "\u0001\u0001\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u00bd\u00c4\u00c0\u006e\u00f7\u0075\u00d1\u00f0" +
   "\u0005\u0001\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0005\u0001\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0005\u0001\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0061\u0072\u0065\u006e\u0074\u0050\u0069" +
   "\u006e\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0049\u006e\u0054\u0069\u006c\u0065\u0054\u0079" +
   "\u0070\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0069\u006c\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0045\u004c\u0049\u006e\u0076\u0065\u0072" +
   "\u0074\u0065\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0045\u004c\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0045\u004c\u0043\u0061\u0074\u0065\u0067" +
   "\u006f\u0072\u0079\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0054\u0069\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0042\u0045\u004c\u0050\u0069\u006e\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0057\u0069\u0072\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0050\u0049\u0050\u0000" +
   "\u0053\u0069\u0074\u0065\u0050\u0069\u006e\u0000" +
   "\u0057\u0069\u0072\u0065\u0000\u0000\u0000\u0000" +
   "\u004e\u006f\u0064\u0065\u0000\u0000\u0000\u0000" +
   "\u0050\u0049\u0050\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0073\u0065\u0075\u0064\u006f\u0043\u0065" +
   "\u006c\u006c\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0057\u0069\u0072\u0065\u0043\u006f\u006e\u0073" +
   "\u0074\u0061\u006e\u0074\u0053\u006f\u0075\u0072" +
   "\u0063\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0072\u0069\u006d\u0054\u006f\u004d\u0061" +
   "\u0063\u0072\u006f\u0045\u0078\u0070\u0061\u006e" +
   "\u0073\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0042\u0065\u006c\u004d" +
   "\u0061\u0070\u0070\u0069\u006e\u0067\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0042\u0065\u006c\u0050" +
   "\u0069\u006e\u0045\u006e\u0074\u0072\u0079\u0000" +
   "\u0053\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0042\u0065\u006c\u0045\u006e\u0074\u0072\u0079" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u006f\u006d\u006d\u006f\u006e\u0043\u0065" +
   "\u006c\u006c\u0042\u0065\u006c\u0050\u0069\u006e" +
   "\u004d\u0061\u0070\u0073\u0000\u0000\u0000\u0000" +
   "\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0053\u0069\u0074\u0065\u0054\u0079\u0070" +
   "\u0065\u0042\u0065\u006c\u0045\u006e\u0074\u0072" +
   "\u0079\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0043\u0065\u006c\u006c\u0042\u0065\u006c" +
   "\u0050\u0069\u006e\u004d\u0061\u0070\u0073\u0000" +
   "\u0050\u0061\u0063\u006b\u0061\u0067\u0065\u0000" +
   "\u0043\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0054\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0043\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0050\u0069\u006e\u0049" +
   "\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e" +
   "\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0050\u0069\u006e\u0049" +
   "\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0049\u006e\u0076\u0065" +
   "\u0072\u0073\u0069\u006f\u006e\u0000\u0000\u0000" +
   "\u0043\u006f\u006e\u0073\u0074\u0072\u0061\u0069" +
   "\u006e\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0075\u0074\u0044\u0065\u0066\u0069\u006e" +
   "\u0069\u0074\u0069\u006f\u006e\u0073\u0000\u0000" +
   "\u003c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0095\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0099\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00b8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d4\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0004\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0002\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u001c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0014\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0002\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0002\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0008\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0002\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0009\u0000\u0000\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0009\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0002\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\n\u0000\u0000\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\n\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0002\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000b\u0000\u0000\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000b\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0002\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0002\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\r\u0000\u0000\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\r\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0002\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u000e\u0000\u0000\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u000e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0002\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b8\u0002\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0002\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00f1\u0053\u007e\u00c6\u00d7\u006f\u00cd\u00fd" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00da\u0076\u0065\u008a\u0054\u00fd\u0054\u00e1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0069\u006c\u0065\u0054\u0079\u0070\u0065" +
   "\u004c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u00f8\u0098\u00b1\u00e1\u0081\u0041\u00fb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0069\u006c\u0065\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0012\u002b\u0062\u0001\u00c7\u0066\u00ee" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u002b\u0042\u00c7\u0049\u00ee\u0048\u00e6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0064\u0065\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b2\u0023\u003f\u00b9\u0056\u0062\u001a\u00ec" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u0069\u006d\u004c\u0069\u0062\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0065\u0078\u0063\u0065\u0070\u0074\u0069\u006f" +
   "\u006e\u004d\u0061\u0070\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cd\u00a3\u00be\u00ee\u0080\u001c\u009d\u00b0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0042\u0065\u006c\u004d" +
   "\u0061\u0070\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0096\u00d0\u008a\u00af\u0049\u0004\u00c6\u00a8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0049\u006e\u0076\u0065" +
   "\u0072\u0073\u0069\u006f\u006e\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u00c4\u00c0\u006e\u00f7\u0075\u00d1\u00f0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u00a5\u004b\u006e\u0065\u00f1\u00b5\u00ab" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0072\u0061\u0069" +
   "\u006e\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0075\u0074\u0044\u0065\u0066\u0069\u006e" +
   "\u0069\u0074\u0069\u006f\u006e\u0073\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e154fd548a6576da =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00da\u0076\u0065\u008a\u0054\u00fd\u0054\u00e1" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0006\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0054\u0079\u0070\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00f4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fd\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0028\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0001\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0087\u0005\u00aa\u0069\u0015\u0084\u00b1\u00ee" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a4\u00a3\u00c1\u009c\u007e\u00bd\u00a9\u00a8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0061\u0073\u0074\u0049\u006e\u0070\u0075" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ab\u0046\u004d\u0018\u0008\u0046\u001f\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0050\u0049\u0050\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u00d1\u0079\u0066\u00b1\u00b0\u0045\u0096" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0057\u0069\u0072\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u00d1\u00d8\u00bc\u0068\u004e\u000b\u00d4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006c\u0074\u0053\u0069\u0074\u0065\u0054" +
   "\u0079\u0070\u0065\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a244a17dc0cf8ddb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00db\u008d\u00cf\u00c0\u007d\u00a1\u0044\u00a2" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0072" +
   "\u0065\u006e\u0074\u0050\u0069\u006e\u0073\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a0b99767cf62f5f6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f6\u00f5\u0062\u00cf\u0067\u0097\u00b9\u00a0" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0082\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0054\u0079\u0070\u0065\u0049\u006e\u0054" +
   "\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0000\u0000\u0000\u00aa\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0072\u0069\u006d\u0061\u0072\u0079\u0054" +
   "\u0079\u0070\u0065\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u004b\u00ca\u0084\u0053\u0079\u00cf\u0014\u008d" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u0069\u006d\u0061\u0072\u0079\u0050" +
   "\u0069\u006e\u0073\u0054\u006f\u0054\u0069\u006c" +
   "\u0065\u0057\u0069\u0072\u0065\u0073\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u006c\u0074\u0050\u0069\u006e\u0073\u0054" +
   "\u006f\u0050\u0072\u0069\u006d\u0061\u0072\u0079" +
   "\u0050\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00db\u008d\u00cf\u00c0\u007d\u00a1\u0044\u00a2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fb4181e1b198f811 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0011\u00f8\u0098\u00b1\u00e1\u0081\u0041\u00fb" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0004\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0054\u0069\u006c" +
   "\u0065\u0054\u0079\u0070\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00fd\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f6\u00f5\u0062\u00cf\u0067\u0097\u00b9\u00a0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0073\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u0070\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\\\u00a3\u003e\u0035\u005b\u0068\u00e5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0071\u0028\u0041\u001a\u0064\u0002\u008a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c9a368a127fcf3ec =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ec\u00f3\u00fc\u0027\u00a1\u0068\u00a3\u00c9" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0042\u0045\u004c" +
   "\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u006e\u0049\u006e\u0076\u0065\u0072" +
   "\u0074\u0069\u006e\u0067\u0050\u0069\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0076\u0065\u0072\u0074\u0069\u006e" +
   "\u0067\u0050\u0069\u006e\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad1f4608184d46ab =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ab\u0046\u004d\u0018\u0008\u0046\u001f\u00ad" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0042\u0045\u004c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0014\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0035\u0001\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0034\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0052\u001c\u0027\u0064\u00d6\u00f9\u00e6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u006e\u0049\u006e\u0076\u0065\u0072" +
   "\u0074\u0069\u006e\u0067\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0076\u0065\u0072\u0074\u0069\u006e" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ec\u00f3\u00fc\u0027\u00a1\u0068\u00a3\u00c9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e6f9d664271c5211 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0011\u0052\u001c\u0027\u0064\u00d6\u00f9\u00e6" +
   "\u001d\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0042\u0045\u004c" +
   "\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0067\u0069\u0063\u0000\u0000\u0000" +
   "\u0072\u006f\u0075\u0074\u0069\u006e\u0067\u0000" +
   "\u0073\u0069\u0074\u0065\u0050\u006f\u0072\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9aae005de55c7a4c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004c\u007a\\\u00e5\u005d\u0000\u00ae\u009a" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ee66c701622b12e9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e9\u0012\u002b\u0062\u0001\u00c7\u0066\u00ee" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0054\u0069\u006c" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ec\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0001\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0001\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0018\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00a7\u00c9\u0033\u0098\u002b\u00ab\u004d\u009e" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u007a\\\u00e5\u005d\u0000\u00ae\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0077\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0069\u006c\u0065\u0050\u0061\u0074\u0049" +
   "\u0064\u0078\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eeb1841569aa0587 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0087\u0005\u00aa\u0069\u0015\u0084\u00b1\u00ee" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\"\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0042\u0045\u004c" +
   "\u0050\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a7\u004c\u00fa\u004c\u00e0\u0093\u002d\u009c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d40b4e68bcd8d145 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0045\u00d1\u00d8\u00bc\u0068\u004e\u000b\u00d4" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0032\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0057\u0069\u0072\u0065\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9645b0b16679d151 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0051\u00d1\u0079\u0066\u00b1\u00b0\u0045\u0096" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0050\u0049\u0050\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006e\u0070\u0069\u006e\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0070\u0069\u006e\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a8a9bd7e9cc1a3a4 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a4\u00a3\u00c1\u009c\u007e\u00bd\u00a9\u00a8" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0050\u0069\u006e\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a7\u004c\u00fa\u004c\u00e0\u0093\u002d\u009c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0070\u0069\u006e\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0040\u000f\u0053\u0050\\\u0045\u0028\u00c6" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e648ee49c7422b35 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0035\u002b\u0042\u00c7\u0049\u00ee\u0048\u00e6" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0057\u0069\u0072" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0069\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ec1a6256b93f23b2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b2\u0023\u003f\u00b9\u0056\u0062\u001a\u00ec" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004e\u006f\u0064" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0030\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0069\u0072\u0065\u0073\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0073\u004d\u0077\u0038\u005f\u0092\u00f5\u00e3" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e5685b353ea35cdc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00dc\\\u00a3\u003e\u0035\u005b\u0068\u00e5" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0005\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u008f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0049\u0050" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b9\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0040\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0041\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c5\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cd\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dd\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00dc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0069\u0072\u0065\u0030\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0031\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0072\u0065\u0063\u0074\u0069\u006f" +
   "\u006e\u0061\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0075\u0066\u0066\u0065\u0072\u0065\u0064" +
   "\u0032\u0030\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0075\u0066\u0066\u0065\u0072\u0065\u0064" +
   "\u0032\u0031\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0076\u0065\u006e\u0074\u0069" +
   "\u006f\u006e\u0061\u006c\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0073\u0065\u0075\u0064\u006f\u0043\u0065" +
   "\u006c\u006c\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0073\u0060\u0064\u0069\u001e\u0086\u00d8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d8861e69646073e0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e0\u0073\u0060\u0064\u0069\u001e\u0086\u00d8" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0042\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0073\u0065" +
   "\u0075\u0064\u006f\u0043\u0065\u006c\u006c\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_8a02641a41287131 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0031\u0071\u0028\u0041\u001a\u0064\u0002\u008a" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0057\u0069\u0072" +
   "\u0065\u0043\u006f\u006e\u0073\u0074\u0061\u006e" +
   "\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0040\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0069\u0072\u0065\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b09d1c80eebea3cd =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00cd\u00a3\u00be\u00ee\u0080\u001c\u009d\u00b0" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0072\u0069" +
   "\u006d\u0054\u006f\u004d\u0061\u0063\u0072\u006f" +
   "\u0045\u0078\u0070\u0061\u006e\u0073\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0072\u0069\u006d\u004e\u0061\u006d\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0061\u0063\u0072\u006f\u004e\u0061\u006d" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a8c60449af8ad096 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0096\u00d0\u008a\u00af\u0049\u0004\u00c6\u00a8" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u0065\u006c" +
   "\u006c\u0042\u0065\u006c\u004d\u0061\u0070\u0070" +
   "\u0069\u006e\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006d\u006d\u006f\u006e\u0050\u0069" +
   "\u006e\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u00e0\u00fb\u0063\u00da\u00e0\u00a8\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0050\u0069\u006e\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u00d1\u00c5\u0047\u00f0\u007a\u00b9\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a41b33a422768adb =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00db\u008a\u0076\"\u00a4\u0033\u001b\u00a4" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u0065\u006c" +
   "\u006c\u0042\u0065\u006c\u0050\u0069\u006e\u0045" +
   "\u006e\u0074\u0072\u0079\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0050\u0069\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_938d70a292310732 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0032\u0007\u0031\u0092\u00a2\u0070\u008d\u0093" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0053\u0069\u0074" +
   "\u0065\u0054\u0079\u0070\u0065\u0042\u0065\u006c" +
   "\u0045\u006e\u0074\u0072\u0079\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u007c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0098\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0073\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cba8e0da63fbe025 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0025\u00e0\u00fb\u0063\u00da\u00e0\u00a8\u00cb" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0092\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006d" +
   "\u006d\u006f\u006e\u0043\u0065\u006c\u006c\u0042" +
   "\u0065\u006c\u0050\u0069\u006e\u004d\u0061\u0070" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0032\u0007\u0031\u0092\u00a2\u0070\u008d\u0093" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00db\u008a\u0076\"\u00a4\u0033\u001b\u00a4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9136b5d44c8a3445 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0045\u0034\u008a\u004c\u00d4\u00b5\u0036\u0091" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0072" +
   "\u0061\u006d\u0065\u0074\u0065\u0072\u0053\u0069" +
   "\u0074\u0065\u0054\u0079\u0070\u0065\u0042\u0065" +
   "\u006c\u0045\u006e\u0074\u0072\u0079\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0093\u0051\u0089\u00e4\u00f9\u0015\u00d2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c6b97af047c5d120 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0020\u00d1\u00c5\u0047\u00f0\u007a\u00b9\u00c6" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0072" +
   "\u0061\u006d\u0065\u0074\u0065\u0072\u0043\u0065" +
   "\u006c\u006c\u0042\u0065\u006c\u0050\u0069\u006e" +
   "\u004d\u0061\u0070\u0073\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0073\u0053\u0069\u0074\u0065\u0054\u0079" +
   "\u0070\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0034\u008a\u004c\u00d4\u00b5\u0036\u0091" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0069\u006e\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00db\u008a\u0076\"\u00a4\u0033\u001b\u00a4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_abb5f1656e4ba5cc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00cc\u00a5\u004b\u006e\u0065\u00f1\u00b5\u00ab" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u002a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0027\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u004c\u00d7\u0085\u004a\u0071\u0060\u00a9\u00fc" +
   "\u0009\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u00ff\u00b2\u001d\u00ae\u0033\u0075\u00bd\u00c8" +
   "\u0009\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0050\u0061\u0063\u006b\u0061\u0067\u0065\u0050" +
   "\u0069\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0047\u0072\u0061\u0064\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u0050" +
   "\u0069\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u00d7\u0085\u004a\u0071\u0060\u00a9\u00fc" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0067\u0072\u0061\u0064\u0065\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ff\u00b2\u001d\u00ae\u0033\u0075\u00bd\u00c8" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fca960714a85d74c =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u004c\u00d7\u0085\u004a\u0071\u0060\u00a9\u00fc" +
   "\u0025\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00cc\u00a5\u004b\u006e\u0065\u00f1\u00b5\u00ab" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0082\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u0050\u0069\u006e\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u00e8\u0030\u00bc\u0041\u0034\u0030\u00e6" +
   "\u0075\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ff\u000f\u00f6\u00bc\u00bd\u00ae\u0099\u00de" +
   "\u005d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0063\u006b\u0061\u0067\u0065\u0050" +
   "\u0069\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e6303441bc30e80d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\r\u00e8\u0030\u00bc\u0041\u0034\u0030\u00e6" +
   "\u0030\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u004c\u00d7\u0085\u004a\u0071\u0060\u00a9\u00fc" +
   "\u0000\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u0050\u0069\u006e\u002e" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u0053\u0069\u0074\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_de99aebdbcf60fff =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ff\u000f\u00f6\u00bc\u00bd\u00ae\u0099\u00de" +
   "\u0030\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u004c\u00d7\u0085\u004a\u0071\u0060\u00a9\u00fc" +
   "\u0000\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u0050\u0069\u006e\u002e" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u006f\u0042\u0065\u006c\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c8bd7533ae1db2ff =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ff\u00b2\u001d\u00ae\u0033\u0075\u00bd\u00c8" +
   "\u0025\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00cc\u00a5\u004b\u006e\u0065\u00f1\u00b5\u00ab" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0050\u0061\u0063" +
   "\u006b\u0061\u0067\u0065\u002e\u0047\u0072\u0061" +
   "\u0064\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u008a\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0070\u0065\u0065\u0064\u0047\u0072\u0061" +
   "\u0064\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u006d\u0070\u0065\u0072\u0061\u0074" +
   "\u0075\u0072\u0065\u0047\u0072\u0061\u0064\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c3fe4bca819dadd3 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u001d\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0061\u006e\u0074\u0054\u0079\u0070" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0019\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0050\u0072\u0065\u0066\u0065\u0072" +
   "\u0065\u006e\u0063\u0065\u0000\u0000\u0000\u0000" +
   "\u0067\u006e\u0064\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0063\u0063\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fa44cf7e3e1f7efc =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0037\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0061\u006e\u0074\u0073\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0039\u0067\u0053\u00ad\u0059\u00d8\u0033\u00ff" +
   "\u0011\u0000\u0000\u0000\u00d2\u0000\u0000\u0000" +
   "\u0010\u00de\u0083\u0035\u00bf\u007e\u0038\u00d5" +
   "\u0019\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0055\u0037\u00b4\u00a4\u00a7\u0088\u00d2\u00d1" +
   "\u001d\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0050\u0069\u006e\u0043" +
   "\u006f\u006e\u0073\u0074\u0061\u006e\u0074\u0045" +
   "\u0078\u0063\u0065\u0070\u0074\u0069\u006f\u006e" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0053\u0069\u0074\u0065\u0043\u006f\u006e\u0073" +
   "\u0074\u0061\u006e\u0074\u0053\u006f\u0075\u0072" +
   "\u0063\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004e\u006f\u0064\u0065\u0043\u006f\u006e\u0073" +
   "\u0074\u0061\u006e\u0074\u0053\u006f\u0075\u0072" +
   "\u0063\u0065\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u00a2\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006d\u0000\u0000\u0000\u00ba\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0089\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0042" +
   "\u0065\u0073\u0074\u0043\u006f\u006e\u0073\u0074" +
   "\u0061\u006e\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u0073\u0074\u0043\u006f\u006e\u0073" +
   "\u0074\u0061\u006e\u0074\u0045\u0078\u0063\u0065" +
   "\u0070\u0074\u0069\u006f\u006e\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0039\u0067\u0053\u00ad\u0059\u00d8\u0033\u00ff" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0053\u006f\u0075\u0072" +
   "\u0063\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u00de\u0083\u0035\u00bf\u007e\u0038\u00d5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0064\u0065\u0053\u006f\u0075\u0072" +
   "\u0063\u0065\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0037\u00b4\u00a4\u00a7\u0088\u00d2\u00d1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ff33d859ad536739 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0039\u0067\u0053\u00ad\u0059\u00d8\u0033\u00ff" +
   "\u0027\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0002\u0000\u0000" +
   "\u0035\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0061\u006e\u0074\u0073\u002e\u0053" +
   "\u0069\u0074\u0065\u0050\u0069\u006e\u0043\u006f" +
   "\u006e\u0073\u0074\u0061\u006e\u0074\u0045\u0078" +
   "\u0063\u0065\u0070\u0074\u0069\u006f\u006e\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0050\u0069\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u0073\u0074\u0043\u006f\u006e\u0073" +
   "\u0074\u0061\u006e\u0074\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d5387ebf3583de10 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0010\u00de\u0083\u0035\u00bf\u007e\u0038\u00d5" +
   "\u0027\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0061\u006e\u0074\u0073\u002e\u0053" +
   "\u0069\u0074\u0065\u0043\u006f\u006e\u0073\u0074" +
   "\u0061\u006e\u0074\u0053\u006f\u0075\u0072\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0065\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00b4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d1d288a7a4b43755 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0055\u0037\u00b4\u00a4\u00a7\u0088\u00d2\u00d1" +
   "\u0027\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00fc\u007e\u001f\u003e\u007e\u00cf\u0044\u00fa" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00d2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0061\u006e\u0074\u0073\u002e\u004e" +
   "\u006f\u0064\u0065\u0043\u006f\u006e\u0073\u0074" +
   "\u0061\u006e\u0074\u0053\u006f\u0075\u0072\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0069\u006c\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0077\u0069\u0072\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u006f\u006e\u0073\u0074\u0061\u006e\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d3\u00ad\u009d\u0081\u00ca\u004b\u00fe\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_883e08341dca3990 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0090\u0039\u00ca\u001d\u0034\u0008\u003e\u0088" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u0065\u006c" +
   "\u006c\u0050\u0069\u006e\u0049\u006e\u0076\u0065" +
   "\u0072\u0073\u0069\u006f\u006e\u0050\u0061\u0072" +
   "\u0061\u006d\u0065\u0074\u0065\u0072\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006e\u0076\u004f\u006e\u006c\u0079\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065" +
   "\u0072\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0093\u0051\u0089\u00e4\u00f9\u0015\u00d2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cd81e36d06dde41d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u001d\u00e4\u00dd\u0006\u006d\u00e3\u0081\u00cd" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0072\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u0065\u006c" +
   "\u006c\u0050\u0069\u006e\u0049\u006e\u0076\u0065" +
   "\u0072\u0073\u0069\u006f\u006e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0050\u0069\u006e\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u006f\u0074\u0049\u006e\u0076\u0065\u0072" +
   "\u0074\u0069\u006e\u0067\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0039\u00ca\u001d\u0034\u0008\u003e\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0076\u0065\u0072\u0074\u0069\u006e" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0039\u00ca\u001d\u0034\u0008\u003e\u0088" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f0d175f76ec0c4bd =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00bd\u00c4\u00c0\u006e\u00f7\u0075\u00d1\u00f0" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u005a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u0065\u006c" +
   "\u006c\u0049\u006e\u0076\u0065\u0072\u0073\u0069" +
   "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0054\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0070\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\\\u00b3\u00aa\u0070\u0081\u00f9\u00b8\u00e8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0050\u0069\u006e\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u00e4\u00dd\u0006\u006d\u00e3\u0081\u00cd" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e21901f504bc717e =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00a7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00e8\u00c8\u00f1\u003a\u00c9\u0062\u002b\u00ac" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0081\u00e0\u0002\u00de\u00e5\u007f\u000f\u00ad" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00f9\u00d6\u0006\u0044\u0071\u0060\u000b\u00f9" +
   "\u0041\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u0073\u00ea\u00dd\u007f\u004e\u0063\u005b\u00cd" +
   "\u0041\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u00c6\u0059\u0076\u0048\u0072\u0018\u005b\u00a0" +
   "\u0041\u0000\u0000\u0000\u0072\u0000\u0000\u0000" +
   "\u00e2\u00f6\u002b\u0051\u0058\u0034\u00e0\u00ea" +
   "\u0041\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0003\u002a\u00d4\u003d\u0054\u00a9\u00cb\u00f6" +
   "\u003d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u00ed\u00ea\u00c6\u0052\u008b\u0010\u0065\u009a" +
   "\u003d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0056\u006f\u008c\u00fd\u00f1\u0042\u002f\u00aa" +
   "\u003d\u0000\u0000\u0000\u009a\u0000\u0000\u0000" +
   "\u008b\u009c\u0063\u00d0\u00c3\u00d7\u00c9\u0087" +
   "\u0041\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0053\u0074\u0061\u0074\u0065\u0000\u0000\u0000" +
   "\u0054\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u0052\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0050\u0069\u006e\u0000\u0000\u0000\u0000" +
   "\u0052\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0052\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0050\u006f\u0072\u0074\u0000\u0000\u0000" +
   "\u0054\u0061\u0067\u0050\u0061\u0069\u0072\u0000" +
   "\u0054\u0061\u0067\u0053\u0074\u0061\u0074\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0045\u004c\u004c\u006f\u0063\u0061\u0074" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u006f\u006e\u0073\u0074\u0072\u0061\u0069" +
   "\u006e\u0074\u004c\u006f\u0063\u0061\u0074\u0069" +
   "\u006f\u006e\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0043\u006f\u006e\u0073" +
   "\u0074\u0072\u0061\u0069\u006e\u0074\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0059\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0058\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u008c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u00e0\u0002\u00de\u00e5\u007f\u000f\u00ad" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u00ea\u00dd\u007f\u004e\u0063\u005b\u00cd" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0043\u006f\u006e\u0073" +
   "\u0074\u0072\u0061\u0069\u006e\u0074\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008b\u009c\u0063\u00d0\u00c3\u00d7\u00c9\u0087" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ac2b62c93af1c8e8 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e8\u00c8\u00f1\u003a\u00c9\u0062\u002b\u00ac" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0053\u0074\u0061\u0074\u0065\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0074\u0061\u0074\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ad0f7fe5de02e081 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0081\u00e0\u0002\u00de\u00e5\u007f\u000f\u00ad" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0005\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0057\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0054\u0061\u0067\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0018\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00ff\u00ff\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fe\u00ff\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c1\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0069\u006c\u0065\u0054\u0079\u0070\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0061\u0074\u0065\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u00c8\u00f1\u003a\u00c9\u0062\u002b\u00ac" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f90b60714406d6f9 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f9\u00d6\u0006\u0044\u0071\u0060\u000b\u00f9" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00b2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0052\u006f\u0075\u0074\u0065\u0064\u0054" +
   "\u0061\u0067\u0050\u0069\u006e\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u0069\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cd5b634e7fddea73 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0073\u00ea\u00dd\u007f\u004e\u0063\u005b\u00cd" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0052\u006f\u0075\u0074\u0065\u0064\u0054" +
   "\u0061\u0067\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u006c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0072\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0075\u0074\u0069\u006e\u0067\u0042" +
   "\u0065\u006c\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0050\u0069\u006e\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f9\u00d6\u0006\u0044\u0071\u0060\u000b\u00f9" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a05b1872487659c6 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c6\u0059\u0076\u0048\u0072\u0018\u005b\u00a0" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0052\u006f\u0075\u0074\u0065\u0064\u0054" +
   "\u0061\u0067\u0050\u006f\u0072\u0074\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eae03458512bf6e2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e2\u00f6\u002b\u0051\u0058\u0034\u00e0\u00ea" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0054\u0061\u0067\u0050\u0061\u0069\u0072" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0058\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c6\u0059\u0076\u0048\u0072\u0018\u005b\u00a0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0061\u0074\u0065\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_f6cba9543dd42a03 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0003\u002a\u00d4\u003d\u0054\u00a9\u00cb\u00f6" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0054\u0061\u0067\u0053\u0074\u0061\u0074" +
   "\u0065\u0073\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0054\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0051\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0068\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0061\u0067\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u006f\u0075\u0074\u0065\u0064\u0054\u0061" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00c6\u0059\u0076\u0048\u0072\u0018\u005b\u00a0" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0061\u0074\u0065\u0073\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9a65108b52c6eaed =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00ed\u00ea\u00c6\u0052\u008b\u0010\u0065\u009a" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0003\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00aa\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0042\u0045\u004c\u004c\u006f\u0063\u0061" +
   "\u0074\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fd\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0048\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0064\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0061\u006e\u0079\u0042\u0065\u006c\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_aa2f42f1fd8c6f56 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0056\u006f\u008c\u00fd\u00f1\u0042\u002f\u00aa" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00e2\u0001\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0043\u006f\u006e\u0073\u0074\u0072\u0061" +
   "\u0069\u006e\u0074\u004c\u006f\u0063\u0061\u0074" +
   "\u0069\u006f\u006e\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0060\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0080\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00ff\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fe\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0090\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0054\u0079\u0070\u0065" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ed\u00ea\u00c6\u0052\u008b\u0010\u0065\u009a" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006d\u0070\u006c\u0069\u0065\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e2\u00f6\u002b\u0051\u0058\u0034\u00e0\u00ea" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0003\u002a\u00d4\u003d\u0054\u00a9\u00cb\u00f6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_87c9d7c3d0639c8b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u008b\u009c\u0063\u00d0\u00c3\u00d7\u00c9\u0087" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u007e\u0071\u00bc\u0004\u00f5\u0001\u0019\u00e2" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0073" +
   "\u002e\u0043\u0065\u006c\u006c\u0043\u006f\u006e" +
   "\u0073\u0074\u0072\u0061\u0069\u006e\u0074\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0073\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0056\u006f\u008c\u00fd\u00f1\u0042\u002f\u00aa" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b49e2f9bb7f59da2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0096\u00ce\u005a\u003e\u003a\u005a\u00a7\u00ff" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0062\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0047\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004c\u0075\u0074" +
   "\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069" +
   "\u006f\u006e\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0086\u0077\u00e6\u0023\u00fe\u0069\u00f0\u00c3" +
   "\u0019\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0028\u00d1\u00bc\u00a0\u00e4\u0069\u00e8\u00c5" +
   "\u0015\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0061\u002d\u0051\u0003\u007b\u00eb\u00f9\u0085" +
   "\u0011\u0000\u0000\u0000\u005a\u0000\u0000\u0000" +
   "\u0044\u0061\u009e\u00a6\u00ec\u0000\u0000\u00bd" +
   "\u0011\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u004c\u0075\u0074\u0043\u0065\u006c\u006c\u0000" +
   "\u004c\u0075\u0074\u0042\u0065\u006c\u0000\u0000" +
   "\u004c\u0075\u0074\u0045\u006c\u0065\u006d\u0065" +
   "\u006e\u0074\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u0075\u0074\u0045\u006c\u0065\u006d\u0065" +
   "\u006e\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006c\u0075\u0074\u0043\u0065\u006c\u006c\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0086\u0077\u00e6\u0023\u00fe\u0069\u00f0\u00c3" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0075\u0074\u0045\u006c\u0065\u006d\u0065" +
   "\u006e\u0074\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0061\u009e\u00a6\u00ec\u0000\u0000\u00bd" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c3f069fe23e67786 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0086\u0077\u00e6\u0023\u00fe\u0069\u00f0\u00c3" +
   "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00a2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004c\u0075\u0074" +
   "\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069" +
   "\u006f\u006e\u0073\u002e\u004c\u0075\u0074\u0043" +
   "\u0065\u006c\u006c\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0063\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0070\u0075\u0074\u0050\u0069\u006e" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c5e869e4a0bcd128 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0028\u00d1\u00bc\u00a0\u00e4\u0069\u00e8\u00c5" +
   "\u002c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0003\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u009a\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004c\u0075\u0074" +
   "\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069" +
   "\u006f\u006e\u0073\u002e\u004c\u0075\u0074\u0042" +
   "\u0065\u006c\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0078\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0084\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0081\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0080\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u009c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0099\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0098\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a1\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0070\u0075\u0074\u0050\u0069\u006e" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0070\u0075\u0074\u0050\u0069" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u006f\u0077\u0042\u0069\u0074\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0069\u0067\u0068\u0042\u0069\u0074\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_85f9eb7b03512d61 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0061\u002d\u0051\u0003\u007b\u00eb\u00f9\u0085" +
   "\u002c\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ba\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004c\u0075\u0074" +
   "\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069" +
   "\u006f\u006e\u0073\u002e\u004c\u0075\u0074\u0045" +
   "\u006c\u0065\u006d\u0065\u006e\u0074\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0069\u0064\u0074\u0068\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0065\u006c\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u00d1\u00bc\u00a0\u00e4\u0069\u00e8\u00c5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bd0000eca69e6144 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0044\u0061\u009e\u00a6\u00ec\u0000\u0000\u00bd" +
   "\u002c\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00a2\u009d\u00f5\u00b7\u009b\u002f\u009e\u00b4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00c2\u0001\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0065\u0076\u0069\u0063\u0065\u0052\u0065" +
   "\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u002e" +
   "\u0063\u0061\u0070\u006e\u0070\u003a\u0044\u0065" +
   "\u0076\u0069\u0063\u0065\u002e\u004c\u0075\u0074" +
   "\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069" +
   "\u006f\u006e\u0073\u002e\u004c\u0075\u0074\u0045" +
   "\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u0074\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0075\u0074\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u002d\u0051\u0003\u007b\u00eb\u00f9\u0085" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

