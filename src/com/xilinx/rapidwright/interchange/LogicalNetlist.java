/* 
 * Copyright (c) 2022 Xilinx, Inc. 
 * All rights reserved.
 *
 * Author: Chris Lavin, Xilinx Research Labs.
 *  
 * This file is part of RapidWright. 
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */
 
// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: LogicalNetlist.capnp

package com.xilinx.rapidwright.interchange;

public final class LogicalNetlist {
  public static class HashSet {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return HashSet.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ImplementationType value) {
        _setShortField(0, (short)value.ordinal());
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }
      public final void setHide(boolean value) {
        _setBooleanField(16, value, (boolean)true);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ImplementationType getType() {
        switch(_getShortField(0)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ImplementationType.ENUMERATOR;
          default: return com.xilinx.rapidwright.interchange.References.ImplementationType._NOT_IN_SCHEMA;
        }
      }

      public final boolean getHide() {
        return _getBooleanField(16, (boolean)true);
      }

    }

  }


  public static class StringRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return StringRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)1);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_fe08a36900b7aef1.buffer, 48, 7);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)1)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_fe08a36900b7aef1.buffer, 48, 7);
      }

    }

  }


  public static class PortRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return PortRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_cebd5deb07a1e8d0.buffer, 55, 8);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_cebd5deb07a1e8d0.buffer, 55, 8);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class CellRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return CellRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_d5c073f0cfa35210.buffer, 55, 9);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_d5c073f0cfa35210.buffer, 55, 9);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class InstRef {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return InstRef.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }
      public final void setType(com.xilinx.rapidwright.interchange.References.ReferenceType value) {
        _setShortField(0, (short)value.ordinal(), (short)2);
      }

      public final boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_aba131b7aa3363af.buffer, 55, 8);
      }
      public final void setField(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setField(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initField(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final int getDepth() {
        return _getIntField(1, (int)1);
      }
      public final void setDepth(int value) {
        _setIntField(1, value, (int)1);
      }

    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public final com.xilinx.rapidwright.interchange.References.ReferenceType getType() {
        switch(_getShortField(0, (short)2)) {
          case 0 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT;
          case 1 : return com.xilinx.rapidwright.interchange.References.ReferenceType.ROOT_VALUE;
          case 2 : return com.xilinx.rapidwright.interchange.References.ReferenceType.PARENT;
          default: return com.xilinx.rapidwright.interchange.References.ReferenceType._NOT_IN_SCHEMA;
        }
      }

      public boolean hasField() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getField() {
        return _getPointerField(org.capnproto.Text.factory, 0, Schemas.b_aba131b7aa3363af.buffer, 55, 8);
      }

      public final int getDepth() {
        return _getIntField(1, (int)1);
      }

    }

  }


  public static class Netlist {
    public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)8);
    public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
      public Factory() {
      }
      public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
        return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
      }
      public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
        return new Builder(segment, data, pointers, dataSize, pointerCount);
      }
      public final org.capnproto.StructSize structSize() {
        return Netlist.STRUCT_SIZE;
      }
      public final Reader asReader(Builder builder) {
        return builder.asReader();
      }
    }
    public static final Factory factory = new Factory();
    public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
      new org.capnproto.StructList.Factory<Builder, Reader>(factory);
    public static final class Builder extends org.capnproto.StructBuilder {
      Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
        super(segment, data, pointers, dataSize, pointerCount);
      }
      public final Reader asReader() {
        return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
      }
      public final boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public final org.capnproto.Text.Builder getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }
      public final void setName(org.capnproto.Text.Reader value) {
        _setPointerField(org.capnproto.Text.factory, 0, value);
      }
      public final void setName(String value) {
        _setPointerField(org.capnproto.Text.factory, 0, new org.capnproto.Text.Reader(value));
      }
      public final org.capnproto.Text.Builder initName(int size) {
        return _initPointerField(org.capnproto.Text.factory, 0, size);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder getPropMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory, 1, null, 0);
      }
      public final void setPropMap(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,1, value);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder initPropMap() {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,1, 0);
      }
      public final boolean hasStrList() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.TextList.Builder getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 2, null, 0);
      }
      public final void setStrList(org.capnproto.TextList.Reader value) {
        _setPointerField(org.capnproto.TextList.factory, 2, value);
      }
      public final org.capnproto.TextList.Builder initStrList(int size) {
        return _initPointerField(org.capnproto.TextList.factory, 2, size);
      }
      public final boolean hasPortList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.Builder> getPortList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.listFactory, 3, null, 0);
      }
      public final void setPortList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.listFactory, 3, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.Builder> initPortList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.listFactory, 3, size);
      }
      public final boolean hasCellDecls() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.Builder> getCellDecls() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.listFactory, 4, null, 0);
      }
      public final void setCellDecls(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.listFactory, 4, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.Builder> initCellDecls(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.listFactory, 4, size);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Builder getTopInst() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.factory, 5, null, 0);
      }
      public final void setTopInst(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Reader value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.factory,5, value);
      }
      public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Builder initTopInst() {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.factory,5, 0);
      }
      public final boolean hasInstList() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Builder> getInstList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.listFactory, 6, null, 0);
      }
      public final void setInstList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.listFactory, 6, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Builder> initInstList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.listFactory, 6, size);
      }
      public final boolean hasCellList() {
        return !_pointerFieldIsNull(7);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.Builder> getCellList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.listFactory, 7, null, 0);
      }
      public final void setCellList(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.Reader> value) {
        _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.listFactory, 7, value);
      }
      public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.Builder> initCellList(int size) {
        return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.listFactory, 7, size);
      }
    }

    public static final class Reader extends org.capnproto.StructReader {
      Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
        super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
      }

      public boolean hasName() {
        return !_pointerFieldIsNull(0);
      }
      public org.capnproto.Text.Reader getName() {
        return _getPointerField(org.capnproto.Text.factory, 0, null, 0, 0);
      }

      public boolean hasPropMap() {
        return !_pointerFieldIsNull(1);
      }
      public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader getPropMap() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,1,null, 0);
      }

      public final boolean hasStrList() {
        return !_pointerFieldIsNull(2);
      }
      public final org.capnproto.TextList.Reader getStrList() {
        return _getPointerField(org.capnproto.TextList.factory, 2, null, 0);
      }

      public final boolean hasPortList() {
        return !_pointerFieldIsNull(3);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.Reader> getPortList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Port.listFactory, 3, null, 0);
      }

      public final boolean hasCellDecls() {
        return !_pointerFieldIsNull(4);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.Reader> getCellDecls() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellDeclaration.listFactory, 4, null, 0);
      }

      public boolean hasTopInst() {
        return !_pointerFieldIsNull(5);
      }
      public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Reader getTopInst() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.factory,5,null, 0);
      }

      public final boolean hasInstList() {
        return !_pointerFieldIsNull(6);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.Reader> getInstList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.CellInstance.listFactory, 6, null, 0);
      }

      public final boolean hasCellList() {
        return !_pointerFieldIsNull(7);
      }
      public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.Reader> getCellList() {
        return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Cell.listFactory, 7, null, 0);
      }

    }

    public static class CellDeclaration {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.CellDeclaration.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory, 0, null, 0);
        }
        public final void setPropMap(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder initPropMap() {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, 0);
        }
        public final int getView() {
          return _getIntField(1);
        }
        public final void setView(int value) {
          _setIntField(1, value);
        }

        public final int getLib() {
          return _getIntField(2);
        }
        public final void setLib(int value) {
          _setIntField(2, value);
        }

        public final boolean hasPorts() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getPorts() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }
        public final void setPorts(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 1, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initPorts(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public boolean hasPropMap() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0,null, 0);
        }

        public final int getView() {
          return _getIntField(1);
        }

        public final int getLib() {
          return _getIntField(2);
        }

        public final boolean hasPorts() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getPorts() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 1, null, 0);
        }

      }

    }


    public static class CellInstance {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.CellInstance.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory, 0, null, 0);
        }
        public final void setPropMap(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder initPropMap() {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, 0);
        }
        public final int getView() {
          return _getIntField(1);
        }
        public final void setView(int value) {
          _setIntField(1, value);
        }

        public final int getCell() {
          return _getIntField(2);
        }
        public final void setCell(int value) {
          _setIntField(2, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public boolean hasPropMap() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0,null, 0);
        }

        public final int getView() {
          return _getIntField(1);
        }

        public final int getCell() {
          return _getIntField(2);
        }

      }

    }


    public static class Cell {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.Cell.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getIndex() {
          return _getIntField(0);
        }
        public final void setIndex(int value) {
          _setIntField(0, value);
        }

        public final boolean hasInsts() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Builder getInsts() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }
        public final void setInsts(org.capnproto.PrimitiveList.Int.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Int.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Int.Builder initInsts(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Int.factory, 0, size);
        }
        public final boolean hasNets() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.Builder> getNets() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.listFactory, 1, null, 0);
        }
        public final void setNets(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.Builder> initNets(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getIndex() {
          return _getIntField(0);
        }

        public final boolean hasInsts() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Int.Reader getInsts() {
          return _getPointerField(org.capnproto.PrimitiveList.Int.factory, 0, null, 0);
        }

        public final boolean hasNets() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.Reader> getNets() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Net.listFactory, 1, null, 0);
        }

      }

    }


    public static class Net {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.Net.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory, 0, null, 0);
        }
        public final void setPropMap(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder initPropMap() {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, 0);
        }
        public final boolean hasPortInsts() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.Builder> getPortInsts() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.listFactory, 1, null, 0);
        }
        public final void setPortInsts(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.listFactory, 1, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.Builder> initPortInsts(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.listFactory, 1, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getName() {
          return _getIntField(0);
        }

        public boolean hasPropMap() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0,null, 0);
        }

        public final boolean hasPortInsts() {
          return !_pointerFieldIsNull(1);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.Reader> getPortInsts() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PortInstance.listFactory, 1, null, 0);
        }

      }

    }


    public static class Port {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)2);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.Port.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.BIT;
            case 1 : return Which.BUS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getName() {
          return _getIntField(0);
        }
        public final void setName(int value) {
          _setIntField(0, value);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }
        public final void setDir(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction value) {
          _setShortField(2, (short)value.ordinal());
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory, 0, null, 0);
        }
        public final void setPropMap(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Builder initPropMap() {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0, 0);
        }
        public final boolean isBit() {
          return which() == Netlist.Port.Which.BIT;
        }
        public final org.capnproto.Void getBit() {
          assert which() == Netlist.Port.Which.BIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setBit(org.capnproto.Void value) {
          _setShortField(3, (short)Netlist.Port.Which.BIT.ordinal());
        }

        public final boolean isBus() {
          return which() == Netlist.Port.Which.BUS;
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.Builder getBus() {
          assert which() == Netlist.Port.Which.BUS:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.factory, 1, null, 0);
        }
        public final void setBus(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.Reader value) {
          _setShortField(3, (short)Netlist.Port.Which.BUS.ordinal());
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.factory,1, value);
        }
        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.Builder initBus() {
          _setShortField(3, (short)Netlist.Port.Which.BUS.ordinal());
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.factory,1, 0);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.BIT;
            case 1 : return Which.BUS;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getName() {
          return _getIntField(0);
        }

        public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction getDir() {
          switch(_getShortField(2)) {
            case 0 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INPUT;
            case 1 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.OUTPUT;
            case 2 : return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction.INOUT;
            default: return com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Direction._NOT_IN_SCHEMA;
          }
        }

        public boolean hasPropMap() {
          return !_pointerFieldIsNull(0);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Reader getPropMap() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.factory,0,null, 0);
        }

        public final boolean isBit() {
          return which() == Netlist.Port.Which.BIT;
        }
        public final org.capnproto.Void getBit() {
          assert which() == Netlist.Port.Which.BIT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isBus() {
          return which() == Netlist.Port.Which.BUS;
        }
        public boolean hasBus() {
          return !_pointerFieldIsNull(1);
        }
        public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.Reader getBus() {
          assert which() == Netlist.Port.Which.BUS:
                      "Must check which() before get()ing a union member.";
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bus.factory,1,null, 0);
        }

      }

      public enum Which {
        BIT,
        BUS,
        _NOT_IN_SCHEMA,
      }
    }


    public enum Direction {
      INPUT,
      OUTPUT,
      INOUT,
      _NOT_IN_SCHEMA,
    }

    public static class Bus {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.Bus.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getBusStart() {
          return _getIntField(0);
        }
        public final void setBusStart(int value) {
          _setIntField(0, value);
        }

        public final int getBusEnd() {
          return _getIntField(1);
        }
        public final void setBusEnd(int value) {
          _setIntField(1, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getBusStart() {
          return _getIntField(0);
        }

        public final int getBusEnd() {
          return _getIntField(1);
        }

      }

    }


    public static class PortInstance {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.PortInstance.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.EXT_PORT;
            case 1 : return Which.INST;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getPort() {
          return _getIntField(0);
        }
        public final void setPort(int value) {
          _setIntField(0, value);
        }

        public final BusIdx.Builder getBusIdx() {
          return new Netlist.PortInstance.BusIdx.Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final BusIdx.Builder initBusIdx() {
          _setShortField(2,(short)0);
          _setIntField(2,0);
  return new Netlist.PortInstance.BusIdx.Builder(segment, data, pointers, dataSize, pointerCount);
        }

        public final boolean isExtPort() {
          return which() == Netlist.PortInstance.Which.EXT_PORT;
        }
        public final org.capnproto.Void getExtPort() {
          assert which() == Netlist.PortInstance.Which.EXT_PORT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }
        public final void setExtPort(org.capnproto.Void value) {
          _setShortField(3, (short)Netlist.PortInstance.Which.EXT_PORT.ordinal());
        }

        public final boolean isInst() {
          return which() == Netlist.PortInstance.Which.INST;
        }
        public final int getInst() {
          assert which() == Netlist.PortInstance.Which.INST:
                      "Must check which() before get()ing a union member.";
          return _getIntField(3);
        }
        public final void setInst(int value) {
          _setShortField(3, (short)Netlist.PortInstance.Which.INST.ordinal());
          _setIntField(3, value);
        }

      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public Which which() {
          switch(_getShortField(3)) {
            case 0 : return Which.EXT_PORT;
            case 1 : return Which.INST;
            default: return Which._NOT_IN_SCHEMA;
          }
        }
        public final int getPort() {
          return _getIntField(0);
        }

        public BusIdx.Reader getBusIdx() {
          return new Netlist.PortInstance.BusIdx.Reader(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean isExtPort() {
          return which() == Netlist.PortInstance.Which.EXT_PORT;
        }
        public final org.capnproto.Void getExtPort() {
          assert which() == Netlist.PortInstance.Which.EXT_PORT:
                      "Must check which() before get()ing a union member.";
          return org.capnproto.Void.VOID;
        }

        public final boolean isInst() {
          return which() == Netlist.PortInstance.Which.INST;
        }
        public final int getInst() {
          assert which() == Netlist.PortInstance.Which.INST:
                      "Must check which() before get()ing a union member.";
          return _getIntField(3);
        }

      }

      public enum Which {
        EXT_PORT,
        INST,
        _NOT_IN_SCHEMA,
      }
      public static class BusIdx {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)0);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Netlist.PortInstance.BusIdx.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.SINGLE_BIT;
              case 1 : return Which.IDX;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final boolean isSingleBit() {
            return which() == Netlist.PortInstance.BusIdx.Which.SINGLE_BIT;
          }
          public final org.capnproto.Void getSingleBit() {
            assert which() == Netlist.PortInstance.BusIdx.Which.SINGLE_BIT:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }
          public final void setSingleBit(org.capnproto.Void value) {
            _setShortField(2, (short)Netlist.PortInstance.BusIdx.Which.SINGLE_BIT.ordinal());
          }

          public final boolean isIdx() {
            return which() == Netlist.PortInstance.BusIdx.Which.IDX;
          }
          public final int getIdx() {
            assert which() == Netlist.PortInstance.BusIdx.Which.IDX:
                        "Must check which() before get()ing a union member.";
            return _getIntField(2);
          }
          public final void setIdx(int value) {
            _setShortField(2, (short)Netlist.PortInstance.BusIdx.Which.IDX.ordinal());
            _setIntField(2, value);
          }

        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(2)) {
              case 0 : return Which.SINGLE_BIT;
              case 1 : return Which.IDX;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final boolean isSingleBit() {
            return which() == Netlist.PortInstance.BusIdx.Which.SINGLE_BIT;
          }
          public final org.capnproto.Void getSingleBit() {
            assert which() == Netlist.PortInstance.BusIdx.Which.SINGLE_BIT:
                        "Must check which() before get()ing a union member.";
            return org.capnproto.Void.VOID;
          }

          public final boolean isIdx() {
            return which() == Netlist.PortInstance.BusIdx.Which.IDX;
          }
          public final int getIdx() {
            assert which() == Netlist.PortInstance.BusIdx.Which.IDX:
                        "Must check which() before get()ing a union member.";
            return _getIntField(2);
          }

        }

        public enum Which {
          SINGLE_BIT,
          IDX,
          _NOT_IN_SCHEMA,
        }
      }


    }


    public static class Bitstring {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)1,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.Bitstring.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final int getWidth() {
          return _getIntField(0);
        }
        public final void setWidth(int value) {
          _setIntField(0, value);
        }

        public final boolean hasData() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Byte.Builder getData() {
          return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 0, null, 0);
        }
        public final void setData(org.capnproto.PrimitiveList.Byte.Reader value) {
          _setPointerField(org.capnproto.PrimitiveList.Byte.factory, 0, value);
        }
        public final org.capnproto.PrimitiveList.Byte.Builder initData(int size) {
          return _initPointerField(org.capnproto.PrimitiveList.Byte.factory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final int getWidth() {
          return _getIntField(0);
        }

        public final boolean hasData() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.PrimitiveList.Byte.Reader getData() {
          return _getPointerField(org.capnproto.PrimitiveList.Byte.factory, 0, null, 0);
        }

      }

    }


    public static class PropertyMap {
      public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)0,(short)1);
      public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
        public Factory() {
        }
        public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
          return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
        }
        public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
          return new Builder(segment, data, pointers, dataSize, pointerCount);
        }
        public final org.capnproto.StructSize structSize() {
          return Netlist.PropertyMap.STRUCT_SIZE;
        }
        public final Reader asReader(Builder builder) {
          return builder.asReader();
        }
      }
      public static final Factory factory = new Factory();
      public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
        new org.capnproto.StructList.Factory<Builder, Reader>(factory);
      public static final class Builder extends org.capnproto.StructBuilder {
        Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
          super(segment, data, pointers, dataSize, pointerCount);
        }
        public final Reader asReader() {
          return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
        }
        public final boolean hasEntries() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder> getEntries() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.listFactory, 0, null, 0);
        }
        public final void setEntries(org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader> value) {
          _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.listFactory, 0, value);
        }
        public final org.capnproto.StructList.Builder<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Builder> initEntries(int size) {
          return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.listFactory, 0, size);
        }
      }

      public static final class Reader extends org.capnproto.StructReader {
        Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
          super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
        }

        public final boolean hasEntries() {
          return !_pointerFieldIsNull(0);
        }
        public final org.capnproto.StructList.Reader<com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.Reader> getEntries() {
          return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.PropertyMap.Entry.listFactory, 0, null, 0);
        }

      }

      public static class Entry {
        public static final org.capnproto.StructSize STRUCT_SIZE = new org.capnproto.StructSize((short)2,(short)1);
        public static final class Factory extends org.capnproto.StructFactory<Builder, Reader> {
          public Factory() {
          }
          public final Reader constructReader(org.capnproto.SegmentReader segment, int data,int pointers, int dataSize, short pointerCount, int nestingLimit) {
            return new Reader(segment,data,pointers,dataSize,pointerCount,nestingLimit);
          }
          public final Builder constructBuilder(org.capnproto.SegmentBuilder segment, int data,int pointers, int dataSize, short pointerCount) {
            return new Builder(segment, data, pointers, dataSize, pointerCount);
          }
          public final org.capnproto.StructSize structSize() {
            return Netlist.PropertyMap.Entry.STRUCT_SIZE;
          }
          public final Reader asReader(Builder builder) {
            return builder.asReader();
          }
        }
        public static final Factory factory = new Factory();
        public static final org.capnproto.StructList.Factory<Builder,Reader> listFactory =
          new org.capnproto.StructList.Factory<Builder, Reader>(factory);
        public static final class Builder extends org.capnproto.StructBuilder {
          Builder(org.capnproto.SegmentBuilder segment, int data, int pointers,int dataSize, short pointerCount){
            super(segment, data, pointers, dataSize, pointerCount);
          }
          public Which which() {
            switch(_getShortField(4)) {
              case 0 : return Which.TEXT_VALUE;
              case 1 : return Which.INT_VALUE;
              case 2 : return Which.BOOL_VALUE;
              case 3 : return Which.BITSTRING_VALUE;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final Reader asReader() {
            return new Reader(segment, data, pointers, dataSize, pointerCount, 0x7fffffff);
          }
          public final int getKey() {
            return _getIntField(0);
          }
          public final void setKey(int value) {
            _setIntField(0, value);
          }

          public final boolean isTextValue() {
            return which() == Netlist.PropertyMap.Entry.Which.TEXT_VALUE;
          }
          public final int getTextValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.TEXT_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getIntField(1);
          }
          public final void setTextValue(int value) {
            _setShortField(4, (short)Netlist.PropertyMap.Entry.Which.TEXT_VALUE.ordinal());
            _setIntField(1, value);
          }

          public final boolean isIntValue() {
            return which() == Netlist.PropertyMap.Entry.Which.INT_VALUE;
          }
          public final int getIntValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.INT_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getIntField(1);
          }
          public final void setIntValue(int value) {
            _setShortField(4, (short)Netlist.PropertyMap.Entry.Which.INT_VALUE.ordinal());
            _setIntField(1, value);
          }

          public final boolean isBoolValue() {
            return which() == Netlist.PropertyMap.Entry.Which.BOOL_VALUE;
          }
          public final boolean getBoolValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.BOOL_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getBooleanField(32);
          }
          public final void setBoolValue(boolean value) {
            _setShortField(4, (short)Netlist.PropertyMap.Entry.Which.BOOL_VALUE.ordinal());
            _setBooleanField(32, value);
          }

          public final boolean isBitstringValue() {
            return which() == Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE;
          }
          public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.Builder getBitstringValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.factory, 0, null, 0);
          }
          public final void setBitstringValue(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.Reader value) {
            _setShortField(4, (short)Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE.ordinal());
            _setPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.factory,0, value);
          }
          public final com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.Builder initBitstringValue() {
            _setShortField(4, (short)Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE.ordinal());
            return _initPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.factory,0, 0);
          }
        }

        public static final class Reader extends org.capnproto.StructReader {
          Reader(org.capnproto.SegmentReader segment, int data, int pointers,int dataSize, short pointerCount, int nestingLimit){
            super(segment, data, pointers, dataSize, pointerCount, nestingLimit);
          }

          public Which which() {
            switch(_getShortField(4)) {
              case 0 : return Which.TEXT_VALUE;
              case 1 : return Which.INT_VALUE;
              case 2 : return Which.BOOL_VALUE;
              case 3 : return Which.BITSTRING_VALUE;
              default: return Which._NOT_IN_SCHEMA;
            }
          }
          public final int getKey() {
            return _getIntField(0);
          }

          public final boolean isTextValue() {
            return which() == Netlist.PropertyMap.Entry.Which.TEXT_VALUE;
          }
          public final int getTextValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.TEXT_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getIntField(1);
          }

          public final boolean isIntValue() {
            return which() == Netlist.PropertyMap.Entry.Which.INT_VALUE;
          }
          public final int getIntValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.INT_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getIntField(1);
          }

          public final boolean isBoolValue() {
            return which() == Netlist.PropertyMap.Entry.Which.BOOL_VALUE;
          }
          public final boolean getBoolValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.BOOL_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getBooleanField(32);
          }

          public final boolean isBitstringValue() {
            return which() == Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE;
          }
          public boolean hasBitstringValue() {
            return !_pointerFieldIsNull(0);
          }
          public com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.Reader getBitstringValue() {
            assert which() == Netlist.PropertyMap.Entry.Which.BITSTRING_VALUE:
                        "Must check which() before get()ing a union member.";
            return _getPointerField(com.xilinx.rapidwright.interchange.LogicalNetlist.Netlist.Bitstring.factory,0,null, 0);
          }

        }

        public enum Which {
          TEXT_VALUE,
          INT_VALUE,
          BOOL_VALUE,
          BITSTRING_VALUE,
          _NOT_IN_SCHEMA,
        }
      }


    }


  }



public static final class Schemas {
public static final org.capnproto.SegmentReader b_f5e87659c5d1baaa =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00aa\u00ba\u00d1\u00c5\u0059\u0076\u00e8\u00f5" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0048\u0061\u0073" +
   "\u0068\u0053\u0065\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0010\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0007\u00bd\u00a6\u0096\u00c5\u00ca\u0085\u0092" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0068\u0069\u0064\u0065\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a21c701a5b5b31d7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d7\u0031\u005b\u005b\u001a\u0070\u001c\u00a2" +
   "\u0015\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0068\u0061\u0073" +
   "\u0068\u0053\u0065\u0074\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00aa\u00ba\u00d1\u00c5\u0059\u0076\u00e8\u00f5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fe08a36900b7aef1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00f1\u00ae\u00b7\u0000\u0069\u00a3\u0008\u00fe" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0053\u0074\u0072" +
   "\u0069\u006e\u0067\u0052\u0065\u0066\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" + "");
public static final org.capnproto.SegmentReader b_81048c9d2a1084e5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0015\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00fa\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0073\u0074\u0072" +
   "\u0069\u006e\u0067\u0052\u0065\u0066\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00f1\u00ae\u00b7\u0000\u0069\u00a3\u0008\u00fe" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_cebd5deb07a1e8d0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d0\u00e8\u00a1\u0007\u00eb\u005d\u00bd\u00ce" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0050\u006f\u0072" +
   "\u0074\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_a8788af96fe62735 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0035\u0027\u00e6\u006f\u00f9\u008a\u0078\u00a8" +
   "\u0015\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0070\u006f\u0072" +
   "\u0074\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u00e8\u00a1\u0007\u00eb\u005d\u00bd\u00ce" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d5c073f0cfa35210 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0010\u0052\u00a3\u00cf\u00f0\u0073\u00c0\u00d5" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0043\u0065\u006c" +
   "\u006c\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0044\u0065\u0063\u006c" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bd5b42f5c77a55df =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00df\u0055\u007a\u00c7\u00f5\u0042\u005b\u00bd" +
   "\u0015\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0063\u0065\u006c" +
   "\u006c\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0052\u00a3\u00cf\u00f0\u0073\u00c0\u00d5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_aba131b7aa3363af =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00af\u0063\u0033\u00aa\u00b7\u0031\u00a1\u00ab" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0049\u006e\u0073" +
   "\u0074\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0040\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u004c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0049\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0050\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0055\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\\\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0074\u0079\u0070\u0065\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u00be\u002f\u00dc\r\u0037\n\u0090" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0002\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0066\u0069\u0065\u006c\u0064\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0074\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0065\u0070\u0074\u0068\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ffb3379db6b5d8c1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00c1\u00d8\u00b5\u00b6\u009d\u0037\u00b3\u00ff" +
   "\u0015\u0000\u0000\u0000\u0005\u0000\u00ff\u000f" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u0069\u006e\u0073" +
   "\u0074\u0052\u0065\u0066\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00af\u0063\u0033\u00aa\u00b7\u0031\u00a1\u00ab" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e47e4296fd6bbdb1 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0015\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0067\u0029\u0091\u00aa\u0067\u00cd\u002c\u00cb" +
   "\u0008\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u00ea\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00a7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u00c7\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00d5\u00ef\u00c8\u006f\u00a7\u0059\u0014\u00e5" +
   "\u0049\u0000\u0000\u0000\u0082\u0000\u0000\u0000" +
   "\u0062\u0045\u0049\u0050\u00ad\u000f\u0070\u00b2" +
   "\u0049\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u009d\u0012\u00a3\u0036\u0094\u0063\u0010\u00fa" +
   "\u0049\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00b0\u0026\u0061\u00cf\u0079\u00ec\u0033\u00eb" +
   "\u0045\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u005b\u00c4\u005d\u0070\u00b7\u001d\u008b\u009f" +
   "\u0041\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00a7\u004c\u00fa\u004c\u00e0\u0093\u002d\u009c" +
   "\u003d\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0086\u00a1\u000c\u00c4\u0018\u007c\u00de\u0099" +
   "\u003d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0009\u0070\u00f5\u00bd\u00d3\u009f\u0078\u00bb" +
   "\u0039\u0000\u0000\u0000\u006a\u0000\u0000\u0000" +
   "\u00d2\u0037\u0071\u004e\u0007\u001f\u000e\u00c1" +
   "\u0039\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0039\u0000\u0000\u0000\u0062\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0044\u0065\u0063\u006c" +
   "\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0000" +
   "\u0043\u0065\u006c\u006c\u0049\u006e\u0073\u0074" +
   "\u0061\u006e\u0063\u0065\u0000\u0000\u0000\u0000" +
   "\u0043\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u004e\u0065\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u006f\u0072\u0074\u0000\u0000\u0000\u0000" +
   "\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f" +
   "\u006e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0042\u0075\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u006f\u0072\u0074\u0049\u006e\u0073\u0074" +
   "\u0061\u006e\u0063\u0065\u0000\u0000\u0000\u0000" +
   "\u0042\u0069\u0074\u0073\u0074\u0072\u0069\u006e" +
   "\u0067\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079" +
   "\u004d\u0061\u0070\u0000\u0000\u0000\u0000\u0000" +
   "\u0020\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d1\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00cc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00d8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00f8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0014\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0011\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u002c\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0001\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0005\u0000\u0000\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0005\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0041\u0001\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003c\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0048\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0006\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0044\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0060\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0007\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005d\u0001\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\\\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u004d\u0061\u0070\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0073\u0074\u0072\u004c\u0069\u0073\u0074\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00d7\u0031\u005b\u005b\u001a\u0070\u001c\u00a2" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u005b\u00c4\u005d\u0070\u00b7\u001d\u008b\u009f" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0044\u0065\u0063\u006c" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d5\u00ef\u00c8\u006f\u00a7\u0059\u0014\u00e5" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u006f\u0070\u0049\u006e\u0073\u0074\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0045\u0049\u0050\u00ad\u000f\u0070\u00b2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0074\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0045\u0049\u0050\u00ad\u000f\u0070\u00b2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u004c\u0069\u0073\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u009d\u0012\u00a3\u0036\u0094\u0063\u0010\u00fa" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_e51459a76fc8efd5 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d5\u00ef\u00c8\u006f\u00a7\u0059\u0014\u00e5" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u006a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0043\u0065\u006c" +
   "\u006c\u0044\u0065\u0063\u006c\u0061\u0072\u0061" +
   "\u0074\u0069\u006f\u006e\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00fc\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0005\u0001\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0028\u0001\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0001\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u004d\u0061\u0070\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0069\u0065\u0077\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0069\u0062\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u0073\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0035\u0027\u00e6\u006f\u00f9\u008a\u0078\u00a8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_b2700fad50494562 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0062\u0045\u0049\u0050\u00ad\u000f\u0070\u00b2" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0043\u0065\u006c" +
   "\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u008d\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0088\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0094\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0091\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00b4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u00bd\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00e0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u004d\u0061\u0070\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0076\u0069\u0065\u0077\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0063\u0065\u006c\u006c\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00df\u0055\u007a\u00c7\u00f5\u0042\u005b\u00bd" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_fa10639436a3129d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u009d\u0012\u00a3\u0036\u0094\u0063\u0010\u00fa" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0043\u0065\u006c" +
   "\u006c\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0094\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00c4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0069\u006e\u0064\u0065\u0078\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00df\u0055\u007a\u00c7\u00f5\u0042\u005b\u00bd" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0074\u0073\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c1\u00d8\u00b5\u00b6\u009d\u0037\u00b3\u00ff" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006e\u0065\u0074\u0073\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0026\u0061\u00cf\u0079\u00ec\u0033\u00eb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_eb33ec79cf6126b0 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00b0\u0026\u0061\u00cf\u0079\u00ec\u0033\u00eb" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u00af\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u004e\u0065\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0045\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0068\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0074\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0071\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u006c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0078\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u004d\u0061\u0070\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u006f\u0072\u0074\u0049\u006e\u0073\u0074" +
   "\u0073\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0009\u0070\u00f5\u00bd\u00d3\u009f\u0078\u00bb" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9f8b1db7705dc45b =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u005b\u00c4\u005d\u0070\u00b7\u001d\u008b\u009f" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0002\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0012\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0050\u006f\u0072" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a4\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b0\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b1\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00ac\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00b8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b5\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00b0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00bc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006e\u0061\u006d\u0065\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0069\u0072\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a7\u004c\u00fa\u004c\u00e0\u0093\u002d\u009c" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000f\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0072\u006f\u0070\u004d\u0061\u0070\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0069\u0074\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0075\u0073\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0086\u00a1\u000c\u00c4\u0018\u007c\u00de\u0099" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_9c2d93e04cfa4ca7 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00a7\u004c\u00fa\u004c\u00e0\u0093\u002d\u009c" +
   "\u001d\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u004f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0044\u0069\u0072" +
   "\u0065\u0063\u0074\u0069\u006f\u006e\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u000c\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u001d\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0070\u0075\u0074\u0000\u0000\u0000" +
   "\u006f\u0075\u0074\u0070\u0075\u0074\u0000\u0000" +
   "\u0069\u006e\u006f\u0075\u0074\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_99de7c18c40ca186 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0086\u00a1\u000c\u00c4\u0018\u007c\u00de\u0099" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\n\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0042\u0075\u0073" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0062\u0075\u0073\u0053\u0074\u0061\u0072\u0074" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0075\u0073\u0045\u006e\u0064\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_bb789fd3bdf57009 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0009\u0070\u00f5\u00bd\u00d3\u009f\u0078\u00bb" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0000\u0000\u0007\u0000\u0000\u0000\u0002\u0000" +
   "\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u0052\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u00e7\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0050\u006f\u0072" +
   "\u0074\u0049\u006e\u0073\u0074\u0061\u006e\u0063" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0061\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u0084\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0090\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0043\u00b0\u00aa\u008e\u00ca\u00e5\u002e\u00ef" +
   "\u008d\u0000\u0000\u0000\u003a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0002\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0075\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0070\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u007c\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fe\u00ff\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0079\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0079\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u009c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00a8\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0070\u006f\u0072\u0074\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0035\u0027\u00e6\u006f\u00f9\u008a\u0078\u00a8" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0075\u0073\u0049\u0064\u0078\u0000\u0000" +
   "\u0065\u0078\u0074\u0050\u006f\u0072\u0074\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0073\u0074\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00c1\u00d8\u00b5\u00b6\u009d\u0037\u00b3\u00ff" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_ef2ee5ca8eaab043 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0043\u00b0\u00aa\u008e\u00ca\u00e5\u002e\u00ef" +
   "\u002a\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0009\u0070\u00f5\u00bd\u00d3\u009f\u0078\u00bb" +
   "\u0000\u0000\u0007\u0000\u0001\u0000\u0002\u0000" +
   "\u0002\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u008a\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0050\u006f\u0072" +
   "\u0074\u0049\u006e\u0073\u0074\u0061\u006e\u0063" +
   "\u0065\u002e\u0062\u0075\u0073\u0049\u0064\u0078" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u00ff\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0034\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00fe\u00ff\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002c\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0038\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0073\u0069\u006e\u0067\u006c\u0065\u0042\u0069" +
   "\u0074\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u0064\u0078\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c10e1f074e7137d2 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u00d2\u0037\u0071\u004e\u0007\u001f\u000e\u00c1" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u003a\u0001\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0021\u0000\u0000\u0000\u0077\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0042\u0069\u0074" +
   "\u0073\u0074\u0072\u0069\u006e\u0067\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0024\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0030\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u002d\u0000\u0000\u0000\u002a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0028\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0044\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0077\u0069\u0064\u0074\u0068\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0064\u0061\u0074\u0061\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0006\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_c62857fbbda36438 =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u001d\u0000\u0000\u0000\u0001\u0000\u0000\u0000" +
   "\u00b1\u00bd\u006b\u00fd\u0096\u0042\u007e\u00e4" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u004a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0017\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0031\u0000\u0000\u0000\u003f\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0050\u0072\u006f" +
   "\u0070\u0065\u0072\u0074\u0079\u004d\u0061\u0070" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u003d\u0093\u0051\u0089\u00e4\u00f9\u0015\u00d2" +
   "\u0001\u0000\u0000\u0000\u0032\u0000\u0000\u0000" +
   "\u0045\u006e\u0074\u0072\u0079\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\r\u0000\u0000\u0000\u0042\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0024\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0065\u006e\u0074\u0072\u0069\u0065\u0073\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u003d\u0093\u0051\u0089\u00e4\u00f9\u0015\u00d2" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
public static final org.capnproto.SegmentReader b_d215f9e48951933d =
   org.capnproto.GeneratedClassSupport.decodeRawBytes(
   "\u0000\u0000\u0000\u0000\u0005\u0000\u0006\u0000" +
   "\u003d\u0093\u0051\u0089\u00e4\u00f9\u0015\u00d2" +
   "\u0029\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u0038\u0064\u00a3\u00bd\u00fb\u0057\u0028\u00c6" +
   "\u0001\u0000\u0007\u0000\u0000\u0000\u0004\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0015\u0000\u0000\u0000\u007a\u0001\u0000\u0000" +
   "\u0029\u0000\u0000\u0000\u0007\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0025\u0000\u0000\u0000\u001f\u0001\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u004c\u006f\u0067\u0069\u0063\u0061\u006c\u004e" +
   "\u0065\u0074\u006c\u0069\u0073\u0074\u002e\u0063" +
   "\u0061\u0070\u006e\u0070\u003a\u004e\u0065\u0074" +
   "\u006c\u0069\u0073\u0074\u002e\u0050\u0072\u006f" +
   "\u0070\u0065\u0072\u0074\u0079\u004d\u0061\u0070" +
   "\u002e\u0045\u006e\u0074\u0072\u0079\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0003\u0000\u0004\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\"\u0000\u0000\u0000" +
   "\u007d\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00a0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ac\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0001\u0000\u00ff\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00a9\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u00ad\u0000\u0000\u0000\u001f\u0000\u0000\u0000" +
   "\u00d0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00dc\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0002\u0000\u00fe\u00ff\u0001\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0002\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d9\u0000\u0000\u0000\u004a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00e4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0003\u0000\u00fd\u00ff\u0020\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0003\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e1\u0000\u0000\u0000\u0052\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e0\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00ec\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0004\u0000\u00fc\u00ff\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0001\u0000\u0004\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e9\u0000\u0000\u0000\u007a\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00e8\u0000\u0000\u0000\u0003\u0000\u0001\u0000" +
   "\u00f4\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u006b\u0065\u0079\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0074\u0065\u0078\u0074\u0056\u0061\u006c\u0075" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0001\u0000\u0002\u0000" +
   "\u00e5\u0084\u0010\u002a\u009d\u008c\u0004\u0081" +
   "\u0004\u0000\u0000\u0000\u0002\u0000\u0001\u0000" +
   "\u0014\u0000\u0000\u0000\u0000\u0000\u0001\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0001\u0000\u0001\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0008\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0069\u006e\u0074\u0056\u0061\u006c\u0075\u0065" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u006f\u006f\u006c\u0056\u0061\u006c\u0075" +
   "\u0065\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0062\u0069\u0074\u0073\u0074\u0072\u0069\u006e" +
   "\u0067\u0056\u0061\u006c\u0075\u0065\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u00d2\u0037\u0071\u004e\u0007\u001f\u000e\u00c1" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0010\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" +
   "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" + "");
}
}

